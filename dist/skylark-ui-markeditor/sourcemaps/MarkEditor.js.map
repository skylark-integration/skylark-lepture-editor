{"version":3,"sources":["MarkEditor.js"],"names":["define","skylark","langx","browser","noder","eventer","finder","$","MarkParser","ui","Widget","fixShortcut","name","isMac","replace","createIcon","options","el","document","createElement","shortcut","shortcuts","title","className","createSep","innerHTML","getState","cm","pos","getCursor","stat","getTokenAt","type","data","text","types","split","ret","i","length","bold","getLine","line","test","quote","italic","toggleFullScreen","editor","codemirror","getWrapperElement","doc","isFull","fullScreen","mozFullScreen","webkitIsFullScreen","request","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","Element","ALLOW_KEYBOARD_INPUT","cancel","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","toggleBold","_toggleBlock","toggleItalic","toggleCodeBlock","toggleBlockquote","_toggleLine","toggleUnOrderedList","toggleOrderedList","drawLink","_replaceSelection","link","drawImage","image","undo","focus","redo","togglePreview","toolbar","preview","parse","constructor","markdown","wrapper","lastChild","appendChild","setTimeout","getValue","active","start","end","startPoint","endPoint","slice","ch","setLine","getSelection","replaceSelection","setSelection","repl","unordered-list","ordered-list","map","start_chars","end_chars","startRegex","RegExp","endRegex","wordCount","pattern","m","match","count","charCodeAt","navigator","platform","Cmd-B","Cmd-I","Cmd-K","Cmd-Alt-I","Cmd-'","Cmd-Alt-L","Cmd-L","action","Editor","MarkEditor","inherit","klassName","_construct","element","this","hasOwnProperty","status","render","getElementsByTagName","_rendered","self","keyMaps","key","CodeMirror","fromTextArea","mode","theme","tabSize","indentWithTabs","lineNumbers","autofocus","extraKeys","createToolbar","createStatusbar","items","bar","item","onclick","e","href","target","on","cmWrapper","parentNode","insertBefore","lineCount","nextSibling","value","val","getDoc","setValue"],"mappings":"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","file":"../MarkEditor.js","sourcesContent":["define([\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/finder\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-md/Parser\",\r\n  \"skylark-ui-swt/ui\",\r\n  \"skylark-ui-swt/Widget\"\r\n],function(skylark, langx, browser, noder, eventer,finder, $, MarkParser, ui, Widget) {\r\n\r\n  var isMac = /Mac/.test(navigator.platform);\r\n\r\n  var shortcuts = {\r\n    'Cmd-B': toggleBold,\r\n    'Cmd-I': toggleItalic,\r\n    'Cmd-K': drawLink,\r\n    'Cmd-Alt-I': drawImage,\r\n    \"Cmd-'\": toggleBlockquote,\r\n    'Cmd-Alt-L': toggleOrderedList,\r\n    'Cmd-L': toggleUnOrderedList\r\n  };\r\n\r\n\r\n  /**\r\n   * Fix shortcut. Mac use Command, others use Ctrl.\r\n   */\r\n  function fixShortcut(name) {\r\n    if (isMac) {\r\n      name = name.replace('Ctrl', 'Cmd');\r\n    } else {\r\n      name = name.replace('Cmd', 'Ctrl');\r\n    }\r\n    return name;\r\n  }\r\n\r\n  /**\r\n   * Create icon element for toolbar.\r\n   */\r\n  function createIcon(name, options) {\r\n    options = options || {};\r\n    var el = document.createElement('a');\r\n\r\n    var shortcut = options.shortcut || shortcuts[name];\r\n    if (shortcut) {\r\n      shortcut = fixShortcut(shortcut);\r\n      el.title = shortcut;\r\n      el.title = el.title.replace('Cmd', '⌘');\r\n      if (isMac) {\r\n        el.title = el.title.replace('Alt', '⌥');\r\n      }\r\n    }\r\n\r\n    el.className = options.className || 'editor-icon-' + name;\r\n    return el;\r\n  }\r\n\r\n  function createSep() {\r\n    el = document.createElement('i');\r\n    el.className = 'separator';\r\n    el.innerHTML = '|';\r\n    return el;\r\n  }\r\n\r\n\r\n  /**\r\n   * The state of CodeMirror at the given position.\r\n   */\r\n  function getState(cm, pos) {\r\n    pos = pos || cm.getCursor('start');\r\n    var stat = cm.getTokenAt(pos);\r\n    if (!stat.type) return {};\r\n\r\n    var types = stat.type.split(' ');\r\n\r\n    var ret = {}, data, text;\r\n    for (var i = 0; i < types.length; i++) {\r\n      data = types[i];\r\n      if (data === 'strong') {\r\n        ret.bold = true;\r\n      } else if (data === 'variable-2') {\r\n        text = cm.getLine(pos.line);\r\n        if (/^\\s*\\d+\\.\\s/.test(text)) {\r\n          ret['ordered-list'] = true;\r\n        } else {\r\n          ret['unordered-list'] = true;\r\n        }\r\n      } else if (data === 'atom') {\r\n        ret.quote = true;\r\n      } else if (data === 'em') {\r\n        ret.italic = true;\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n\r\n  /**\r\n   * Toggle full screen of the editor.\r\n   */\r\n  function toggleFullScreen(editor) {\r\n    var el = editor.codemirror.getWrapperElement();\r\n\r\n    // https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\r\n    var doc = document;\r\n    var isFull = doc.fullScreen || doc.mozFullScreen || doc.webkitIsFullScreen;\r\n    var request = function() {\r\n      if (el.requestFullScreen) {\r\n        el.requestFullScreen();\r\n      } else if (el.mozRequestFullScreen) {\r\n        el.mozRequestFullScreen();\r\n      } else if (el.webkitRequestFullScreen) {\r\n        el.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\r\n      }\r\n    };\r\n    var cancel = function() {\r\n      if (doc.cancelFullScreen) {\r\n        doc.cancelFullScreen();\r\n      } else if (doc.mozCancelFullScreen) {\r\n        doc.mozCancelFullScreen();\r\n      } else if (doc.webkitCancelFullScreen) {\r\n        doc.webkitCancelFullScreen();\r\n      }\r\n    };\r\n    if (!isFull) {\r\n      request();\r\n    } else if (cancel) {\r\n      cancel();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Action for toggling bold.\r\n   */\r\n  function toggleBold(editor) {\r\n    _toggleBlock(editor, 'bold', '**');\r\n  }\r\n\r\n\r\n  /**\r\n   * Action for toggling italic.\r\n   */\r\n  function toggleItalic(editor) {\r\n    _toggleBlock(editor, 'italic', '*');\r\n  }\r\n\r\n  /**\r\n   * Action for toggling code block.\r\n   */\r\n  function toggleCodeBlock(editor) {\r\n    _toggleBlock(editor, 'code', '```\\r\\n', '\\r\\n```');\r\n  }\r\n\r\n  /**\r\n   * Action for toggling blockquote.\r\n   */\r\n  function toggleBlockquote(editor) {\r\n    var cm = editor.codemirror;\r\n    _toggleLine(cm, 'quote');\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Action for toggling ul.\r\n   */\r\n  function toggleUnOrderedList(editor) {\r\n    var cm = editor.codemirror;\r\n    _toggleLine(cm, 'unordered-list');\r\n  }\r\n\r\n\r\n  /**\r\n   * Action for toggling ol.\r\n   */\r\n  function toggleOrderedList(editor) {\r\n    var cm = editor.codemirror;\r\n    _toggleLine(cm, 'ordered-list');\r\n  }\r\n\r\n\r\n  /**\r\n   * Action for drawing a link.\r\n   */\r\n  function drawLink(editor) {\r\n    var cm = editor.codemirror;\r\n    var stat = getState(cm);\r\n    _replaceSelection(cm, stat.link, '[', '](http://)');\r\n  }\r\n\r\n\r\n  /**\r\n   * Action for drawing an img.\r\n   */\r\n  function drawImage(editor) {\r\n    var cm = editor.codemirror;\r\n    var stat = getState(cm);\r\n    _replaceSelection(cm, stat.image, '![', '](http://)');\r\n  }\r\n\r\n\r\n  /**\r\n   * Undo action.\r\n   */\r\n  function undo(editor) {\r\n    var cm = editor.codemirror;\r\n    cm.undo();\r\n    cm.focus();\r\n  }\r\n\r\n\r\n  /**\r\n   * Redo action.\r\n   */\r\n  function redo(editor) {\r\n    var cm = editor.codemirror;\r\n    cm.redo();\r\n    cm.focus();\r\n  }\r\n\r\n  /**\r\n   * Preview action.\r\n   */\r\n  function togglePreview(editor) {\r\n    var toolbar = editor.toolbar.preview;\r\n    var parse = editor.constructor.markdown;\r\n    var cm = editor.codemirror;\r\n    var wrapper = cm.getWrapperElement();\r\n    var preview = wrapper.lastChild;\r\n    if (!/editor-preview/.test(preview.className)) {\r\n      preview = document.createElement('div');\r\n      preview.className = 'editor-preview';\r\n      wrapper.appendChild(preview);\r\n    }\r\n    if (/editor-preview-active/.test(preview.className)) {\r\n      preview.className = preview.className.replace(\r\n        /\\s*editor-preview-active\\s*/g, ''\r\n      );\r\n      toolbar.className = toolbar.className.replace(/\\s*active\\s*/g, '');\r\n    } else {\r\n      /* When the preview button is clicked for the first time,\r\n       * give some time for the transition from editor.css to fire and the view to slide from right to left,\r\n       * instead of just appearing.\r\n       */\r\n      setTimeout(function() {preview.className += ' editor-preview-active'}, 1);\r\n      toolbar.className += ' active';\r\n    }\r\n    var text = cm.getValue();\r\n    preview.innerHTML = parse(text);\r\n  }\r\n\r\n  function _replaceSelection(cm, active, start, end) {\r\n    var text;\r\n    var startPoint = cm.getCursor('start');\r\n    var endPoint = cm.getCursor('end');\r\n    if (active) {\r\n      text = cm.getLine(startPoint.line);\r\n      start = text.slice(0, startPoint.ch);\r\n      end = text.slice(startPoint.ch);\r\n      cm.setLine(startPoint.line, start + end);\r\n    } else {\r\n      text = cm.getSelection();\r\n      cm.replaceSelection(start + text + end);\r\n\r\n      startPoint.ch += start.length;\r\n      endPoint.ch += start.length;\r\n    }\r\n    cm.setSelection(startPoint, endPoint);\r\n    cm.focus();\r\n  }\r\n\r\n\r\n  function _toggleLine(cm, name) {\r\n    var stat = getState(cm);\r\n    var startPoint = cm.getCursor('start');\r\n    var endPoint = cm.getCursor('end');\r\n    var repl = {\r\n      quote: /^(\\s*)\\>\\s+/,\r\n      'unordered-list': /^(\\s*)(\\*|\\-|\\+)\\s+/,\r\n      'ordered-list': /^(\\s*)\\d+\\.\\s+/\r\n    };\r\n    var map = {\r\n      quote: '> ',\r\n      'unordered-list': '* ',\r\n      'ordered-list': '1. '\r\n    };\r\n    for (var i = startPoint.line; i <= endPoint.line; i++) {\r\n      (function(i) {\r\n        var text = cm.getLine(i);\r\n        if (stat[name]) {\r\n          text = text.replace(repl[name], '$1');\r\n        } else {\r\n          text = map[name] + text;\r\n        }\r\n        cm.setLine(i, text);\r\n      })(i);\r\n    }\r\n    cm.focus();\r\n  }\r\n\r\n  function _toggleBlock(editor, type, start_chars, end_chars){\r\n    end_chars = (typeof end_chars === 'undefined') ? start_chars : end_chars;\r\n    var cm = editor.codemirror;\r\n    var stat = getState(cm);\r\n\r\n    var text;\r\n    var start = start_chars;\r\n    var end = end_chars;\r\n\r\n    var startPoint = cm.getCursor('start');\r\n    var endPoint = cm.getCursor('end');\r\n    if (stat[type]) {\r\n      text = cm.getLine(startPoint.line);\r\n      start = text.slice(0, startPoint.ch);\r\n      end = text.slice(startPoint.ch);\r\n      startRegex = new RegExp(\"/^(.*)?(\\*|\\_){\" + start_chars.length + \"}(\\S+.*)?$/\", \"g\")\r\n      start = start.replace(startRegex, '$1$3');\r\n      endRegex = new RegExp(\"/^(.*\\S+)?(\\*|\\_){\" + end_chars.length + \"}(\\s+.*)?$/\", \"g\")\r\n      end = end.replace(endRegex, '$1$3');\r\n      startPoint.ch -= start_chars.length;\r\n      endPoint.ch -= end_chars.length;\r\n      cm.setLine(startPoint.line, start + end);\r\n    } else {\r\n      text = cm.getSelection();\r\n      cm.replaceSelection(start + text + end);\r\n\r\n      startPoint.ch += start_chars.length;\r\n      endPoint.ch += end_chars.length;\r\n    }\r\n    cm.setSelection(startPoint, endPoint);\r\n    cm.focus();\r\n  }\r\n\r\n\r\n  /* The right word count in respect for CJK. */\r\n  function wordCount(data) {\r\n    var pattern = /[a-zA-Z0-9_\\u0392-\\u03c9]+|[\\u4E00-\\u9FFF\\u3400-\\u4dbf\\uf900-\\ufaff\\u3040-\\u309f\\uac00-\\ud7af]+/g;\r\n    var m = data.match(pattern);\r\n    var count = 0;\r\n    if( m === null ) return count;\r\n    for (var i = 0; i < m.length; i++) {\r\n      if (m[i].charCodeAt(0) >= 0x4E00) {\r\n        count += m[i].length;\r\n      } else {\r\n        count += 1;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n\r\n  var toolbar = [\r\n    {name: 'bold', action: toggleBold},\r\n    {name: 'italic', action: toggleItalic},\r\n    {name: 'code', action: toggleCodeBlock},\r\n    '|',\r\n\r\n    {name: 'quote', action: toggleBlockquote},\r\n    {name: 'unordered-list', action: toggleUnOrderedList},\r\n    {name: 'ordered-list', action: toggleOrderedList},\r\n    '|',\r\n\r\n    {name: 'link', action: drawLink},\r\n    {name: 'image', action: drawImage},\r\n    '|',\r\n\r\n    {name: 'info', action: 'http://lab.lepture.com/editor/markdown'},\r\n    {name: 'preview', action: togglePreview},\r\n    {name: 'fullscreen', action: toggleFullScreen}\r\n  ];\r\n\r\n\r\n\r\n  var Editor = ui.MarkEditor = Widget.inherit({\r\n    klassName : \"MarkEditor\",\r\n\r\n    _construct : function (options) {\r\n      options = options || {};\r\n\r\n      if (options.element) {\r\n        this.element = options.element;\r\n      }\r\n\r\n      options.toolbar = options.toolbar || Editor.toolbar;\r\n      // you can customize toolbar with object\r\n      // [{name: 'bold', shortcut: 'Ctrl-B', className: 'icon-bold'}]\r\n\r\n      if (!options.hasOwnProperty('status')) {\r\n        options.status = ['lines', 'words', 'cursor'];\r\n      }\r\n\r\n      this.options = options;\r\n\r\n      // If user has passed an element, it should auto rendered\r\n      if (this.element) {\r\n        this.render();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Render editor to the given element.\r\n     */\r\n    render : function(el) {\r\n      if (!el) {\r\n        el = this.element || document.getElementsByTagName('textarea')[0];\r\n      }\r\n\r\n      if (this._rendered && this._rendered === el) {\r\n        // Already rendered.\r\n        return;\r\n      }\r\n\r\n      this.element = el;\r\n      var options = this.options;\r\n\r\n      var self = this;\r\n      var keyMaps = {};\r\n\r\n      for (var key in shortcuts) {\r\n        (function(key) {\r\n          keyMaps[fixShortcut(key)] = function(cm) {\r\n            shortcuts[key](self);\r\n          };\r\n        })(key);\r\n      }\r\n\r\n      keyMaps[\"Enter\"] = \"newlineAndIndentContinueMarkdownList\";\r\n      keyMaps['Tab'] = 'tabAndIndentContinueMarkdownList';\r\n      keyMaps['Shift-Tab'] = 'shiftTabAndIndentContinueMarkdownList';\r\n\r\n      this.codemirror = CodeMirror.fromTextArea(el, {\r\n        mode: 'markdown',\r\n        theme: 'paper',\r\n        tabSize: '2',\r\n        indentWithTabs: true,\r\n        lineNumbers: false,\r\n        autofocus: true,\r\n        extraKeys: keyMaps\r\n      });\r\n\r\n      if (options.toolbar !== false) {\r\n        this.createToolbar();\r\n      }\r\n      if (options.status !== false) {\r\n        this.createStatusbar();\r\n      }\r\n\r\n      this._rendered = this.element;\r\n    },\r\n\r\n    createToolbar : function(items) {\r\n      items = items || this.options.toolbar;\r\n\r\n      if (!items || items.length === 0) {\r\n        return;\r\n      }\r\n\r\n      var bar = document.createElement('div');\r\n      bar.className = 'editor-toolbar';\r\n\r\n      var self = this;\r\n\r\n      var el;\r\n      self.toolbar = {};\r\n\r\n      for (var i = 0; i < items.length; i++) {\r\n        (function(item) {\r\n          var el;\r\n          if (item.name) {\r\n            el = createIcon(item.name, item);\r\n          } else if (item === '|') {\r\n            el = createSep();\r\n          } else {\r\n            el = createIcon(item);\r\n          }\r\n\r\n          // bind events, special for info\r\n          if (item.action) {\r\n            if (typeof item.action === 'function') {\r\n              el.onclick = function(e) {\r\n                item.action(self);\r\n              };\r\n            } else if (typeof item.action === 'string') {\r\n              el.href = item.action;\r\n              el.target = '_blank';\r\n            }\r\n          }\r\n          self.toolbar[item.name || item] = el;\r\n          bar.appendChild(el);\r\n        })(items[i]);\r\n      }\r\n\r\n      var cm = this.codemirror;\r\n      cm.on('cursorActivity', function() {\r\n        var stat = getState(cm);\r\n\r\n        for (var key in self.toolbar) {\r\n          (function(key) {\r\n            var el = self.toolbar[key];\r\n            if (stat[key]) {\r\n              el.className += ' active';\r\n            } else {\r\n              el.className = el.className.replace(/\\s*active\\s*/g, '');\r\n            }\r\n          })(key);\r\n        }\r\n      });\r\n\r\n      var cmWrapper = cm.getWrapperElement();\r\n      cmWrapper.parentNode.insertBefore(bar, cmWrapper);\r\n      return bar;\r\n    },\r\n\r\n    createStatusbar : function(status) {\r\n      status = status || this.options.status;\r\n\r\n      if (!status || status.length === 0) return;\r\n\r\n      var bar = document.createElement('div');\r\n      bar.className = 'editor-statusbar';\r\n\r\n      var pos, cm = this.codemirror;\r\n      for (var i = 0; i < status.length; i++) {\r\n        (function(name) {\r\n          var el = document.createElement('span');\r\n          el.className = name;\r\n          if (name === 'words') {\r\n            el.innerHTML = '0';\r\n            cm.on('update', function() {\r\n              el.innerHTML = wordCount(cm.getValue());\r\n            });\r\n          } else if (name === 'lines') {\r\n            el.innerHTML = '0';\r\n            cm.on('update', function() {\r\n              el.innerHTML = cm.lineCount();\r\n            });\r\n          } else if (name === 'cursor') {\r\n            el.innerHTML = '0:0';\r\n            cm.on('cursorActivity', function() {\r\n              pos = cm.getCursor();\r\n              el.innerHTML = pos.line + ':' + pos.ch;\r\n            });\r\n          }\r\n          bar.appendChild(el);\r\n        })(status[i]);\r\n      }\r\n      var cmWrapper = this.codemirror.getWrapperElement();\r\n      cmWrapper.parentNode.insertBefore(bar, cmWrapper.nextSibling);\r\n      return bar;\r\n    },\r\n\r\n    /**\r\n     * Get or set the text content.\r\n     */\r\n    value : function(val) {\r\n      if (val) {\r\n        this.codemirror.getDoc().setValue(val);\r\n        return this;\r\n      } else {\r\n        return this.codemirror.getValue();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Bind instance methods for exports.\r\n     */\r\n    toggleBold : function() {\r\n      toggleBold(this);\r\n    },\r\n\r\n    toggleItalic : function() {\r\n      toggleItalic(this);\r\n    },\r\n\r\n    toggleBlockquote : function() {\r\n      toggleBlockquote(this);\r\n    },\r\n\r\n    toggleUnOrderedList : function() {\r\n      toggleUnOrderedList(this);\r\n    },\r\n\r\n    toggleOrderedList : function() {\r\n      toggleOrderedList(this);\r\n    },\r\n\r\n    drawLink : function() {\r\n      drawLink(this);\r\n    },\r\n\r\n    drawImage : function() {\r\n      drawImage(this);\r\n    },\r\n\r\n    undo : function() {\r\n      undo(this);\r\n    },\r\n\r\n    redo : function() {\r\n      redo(this);\r\n    },\r\n\r\n    togglePreview : function() {\r\n      togglePreview(this);\r\n    },\r\n    toggleFullScreen : function() {\r\n      toggleFullScreen(this);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Default toolbar elements.\r\n   */\r\n  Editor.toolbar = toolbar;\r\n\r\n  /**\r\n   * Default markdown render.\r\n   */\r\n  Editor.markdown = function(text) {\r\n    // use marked as markdown parser\r\n    return MarkParser.parse(text);\r\n  };\r\n\r\n\r\n\r\n  /**\r\n   * Bind static methods for exports.\r\n   */\r\n  Editor.toggleBold = toggleBold;\r\n  Editor.toggleItalic = toggleItalic;\r\n  Editor.toggleBlockquote = toggleBlockquote;\r\n  Editor.toggleUnOrderedList = toggleUnOrderedList;\r\n  Editor.toggleOrderedList = toggleOrderedList;\r\n  Editor.drawLink = drawLink;\r\n  Editor.drawImage = drawImage;\r\n  Editor.undo = undo;\r\n  Editor.redo = redo;\r\n  Editor.togglePreview = togglePreview;\r\n  Editor.toggleFullScreen = toggleFullScreen;\r\n\r\n  return Editor;\r\n});\r\n"]}