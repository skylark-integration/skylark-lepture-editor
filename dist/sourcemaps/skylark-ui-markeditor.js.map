{"version":3,"sources":["skylark-ui-markeditor.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","browser","noder","eventer","finder","$","MarkParser","ui","Widget","fixShortcut","name","isMac","replace","createIcon","options","el","document","createElement","shortcut","shortcuts","title","className","createSep","innerHTML","getState","cm","pos","getCursor","stat","getTokenAt","type","data","text","types","ret","bold","getLine","line","test","quote","italic","toggleFullScreen","editor","codemirror","getWrapperElement","doc","isFull","fullScreen","mozFullScreen","webkitIsFullScreen","request","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","Element","ALLOW_KEYBOARD_INPUT","cancel","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","toggleBold","_toggleBlock","toggleItalic","toggleCodeBlock","toggleBlockquote","_toggleLine","toggleUnOrderedList","toggleOrderedList","drawLink","_replaceSelection","link","drawImage","image","undo","focus","redo","togglePreview","toolbar","preview","parse","constructor","markdown","wrapper","lastChild","appendChild","setTimeout","getValue","active","start","end","startPoint","endPoint","slice","ch","setLine","getSelection","replaceSelection","setSelection","repl","unordered-list","ordered-list","start_chars","end_chars","startRegex","RegExp","endRegex","wordCount","pattern","m","match","count","charCodeAt","navigator","platform","Cmd-B","Cmd-I","Cmd-K","Cmd-Alt-I","Cmd-'","Cmd-Alt-L","Cmd-L","action","Editor","MarkEditor","inherit","klassName","_construct","element","this","status","render","getElementsByTagName","_rendered","self","keyMaps","key","CodeMirror","fromTextArea","mode","theme","tabSize","indentWithTabs","lineNumbers","autofocus","extraKeys","createToolbar","createStatusbar","items","bar","item","onclick","e","href","target","on","cmWrapper","parentNode","insertBefore","lineCount","nextSibling","value","val","getDoc","setValue","main"],"mappings":"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","file":"../skylark-ui-markeditor.js","sourcesContent":["define('skylark-ui-markeditor/MarkEditor',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/finder\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-md/Parser\",\r\n  \"skylark-ui-swt/ui\",\r\n  \"skylark-ui-swt/Widget\"\r\n],function(skylark, langx, browser, noder, eventer,finder, $, MarkParser, ui, Widget) {\r\n\r\n  var isMac = /Mac/.test(navigator.platform);\r\n\r\n  var shortcuts = {\r\n    'Cmd-B': toggleBold,\r\n    'Cmd-I': toggleItalic,\r\n    'Cmd-K': drawLink,\r\n    'Cmd-Alt-I': drawImage,\r\n    \"Cmd-'\": toggleBlockquote,\r\n    'Cmd-Alt-L': toggleOrderedList,\r\n    'Cmd-L': toggleUnOrderedList\r\n  };\r\n\r\n\r\n  /**\r\n   * Fix shortcut. Mac use Command, others use Ctrl.\r\n   */\r\n  function fixShortcut(name) {\r\n    if (isMac) {\r\n      name = name.replace('Ctrl', 'Cmd');\r\n    } else {\r\n      name = name.replace('Cmd', 'Ctrl');\r\n    }\r\n    return name;\r\n  }\r\n\r\n  /**\r\n   * Create icon element for toolbar.\r\n   */\r\n  function createIcon(name, options) {\r\n    options = options || {};\r\n    var el = document.createElement('a');\r\n\r\n    var shortcut = options.shortcut || shortcuts[name];\r\n    if (shortcut) {\r\n      shortcut = fixShortcut(shortcut);\r\n      el.title = shortcut;\r\n      el.title = el.title.replace('Cmd', '⌘');\r\n      if (isMac) {\r\n        el.title = el.title.replace('Alt', '⌥');\r\n      }\r\n    }\r\n\r\n    el.className = options.className || 'editor-icon-' + name;\r\n    return el;\r\n  }\r\n\r\n  function createSep() {\r\n    el = document.createElement('i');\r\n    el.className = 'separator';\r\n    el.innerHTML = '|';\r\n    return el;\r\n  }\r\n\r\n\r\n  /**\r\n   * The state of CodeMirror at the given position.\r\n   */\r\n  function getState(cm, pos) {\r\n    pos = pos || cm.getCursor('start');\r\n    var stat = cm.getTokenAt(pos);\r\n    if (!stat.type) return {};\r\n\r\n    var types = stat.type.split(' ');\r\n\r\n    var ret = {}, data, text;\r\n    for (var i = 0; i < types.length; i++) {\r\n      data = types[i];\r\n      if (data === 'strong') {\r\n        ret.bold = true;\r\n      } else if (data === 'variable-2') {\r\n        text = cm.getLine(pos.line);\r\n        if (/^\\s*\\d+\\.\\s/.test(text)) {\r\n          ret['ordered-list'] = true;\r\n        } else {\r\n          ret['unordered-list'] = true;\r\n        }\r\n      } else if (data === 'atom') {\r\n        ret.quote = true;\r\n      } else if (data === 'em') {\r\n        ret.italic = true;\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n\r\n  /**\r\n   * Toggle full screen of the editor.\r\n   */\r\n  function toggleFullScreen(editor) {\r\n    var el = editor.codemirror.getWrapperElement();\r\n\r\n    // https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\r\n    var doc = document;\r\n    var isFull = doc.fullScreen || doc.mozFullScreen || doc.webkitIsFullScreen;\r\n    var request = function() {\r\n      if (el.requestFullScreen) {\r\n        el.requestFullScreen();\r\n      } else if (el.mozRequestFullScreen) {\r\n        el.mozRequestFullScreen();\r\n      } else if (el.webkitRequestFullScreen) {\r\n        el.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\r\n      }\r\n    };\r\n    var cancel = function() {\r\n      if (doc.cancelFullScreen) {\r\n        doc.cancelFullScreen();\r\n      } else if (doc.mozCancelFullScreen) {\r\n        doc.mozCancelFullScreen();\r\n      } else if (doc.webkitCancelFullScreen) {\r\n        doc.webkitCancelFullScreen();\r\n      }\r\n    };\r\n    if (!isFull) {\r\n      request();\r\n    } else if (cancel) {\r\n      cancel();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Action for toggling bold.\r\n   */\r\n  function toggleBold(editor) {\r\n    _toggleBlock(editor, 'bold', '**');\r\n  }\r\n\r\n\r\n  /**\r\n   * Action for toggling italic.\r\n   */\r\n  function toggleItalic(editor) {\r\n    _toggleBlock(editor, 'italic', '*');\r\n  }\r\n\r\n  /**\r\n   * Action for toggling code block.\r\n   */\r\n  function toggleCodeBlock(editor) {\r\n    _toggleBlock(editor, 'code', '```\\r\\n', '\\r\\n```');\r\n  }\r\n\r\n  /**\r\n   * Action for toggling blockquote.\r\n   */\r\n  function toggleBlockquote(editor) {\r\n    var cm = editor.codemirror;\r\n    _toggleLine(cm, 'quote');\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Action for toggling ul.\r\n   */\r\n  function toggleUnOrderedList(editor) {\r\n    var cm = editor.codemirror;\r\n    _toggleLine(cm, 'unordered-list');\r\n  }\r\n\r\n\r\n  /**\r\n   * Action for toggling ol.\r\n   */\r\n  function toggleOrderedList(editor) {\r\n    var cm = editor.codemirror;\r\n    _toggleLine(cm, 'ordered-list');\r\n  }\r\n\r\n\r\n  /**\r\n   * Action for drawing a link.\r\n   */\r\n  function drawLink(editor) {\r\n    var cm = editor.codemirror;\r\n    var stat = getState(cm);\r\n    _replaceSelection(cm, stat.link, '[', '](http://)');\r\n  }\r\n\r\n\r\n  /**\r\n   * Action for drawing an img.\r\n   */\r\n  function drawImage(editor) {\r\n    var cm = editor.codemirror;\r\n    var stat = getState(cm);\r\n    _replaceSelection(cm, stat.image, '![', '](http://)');\r\n  }\r\n\r\n\r\n  /**\r\n   * Undo action.\r\n   */\r\n  function undo(editor) {\r\n    var cm = editor.codemirror;\r\n    cm.undo();\r\n    cm.focus();\r\n  }\r\n\r\n\r\n  /**\r\n   * Redo action.\r\n   */\r\n  function redo(editor) {\r\n    var cm = editor.codemirror;\r\n    cm.redo();\r\n    cm.focus();\r\n  }\r\n\r\n  /**\r\n   * Preview action.\r\n   */\r\n  function togglePreview(editor) {\r\n    var toolbar = editor.toolbar.preview;\r\n    var parse = editor.constructor.markdown;\r\n    var cm = editor.codemirror;\r\n    var wrapper = cm.getWrapperElement();\r\n    var preview = wrapper.lastChild;\r\n    if (!/editor-preview/.test(preview.className)) {\r\n      preview = document.createElement('div');\r\n      preview.className = 'editor-preview';\r\n      wrapper.appendChild(preview);\r\n    }\r\n    if (/editor-preview-active/.test(preview.className)) {\r\n      preview.className = preview.className.replace(\r\n        /\\s*editor-preview-active\\s*/g, ''\r\n      );\r\n      toolbar.className = toolbar.className.replace(/\\s*active\\s*/g, '');\r\n    } else {\r\n      /* When the preview button is clicked for the first time,\r\n       * give some time for the transition from editor.css to fire and the view to slide from right to left,\r\n       * instead of just appearing.\r\n       */\r\n      setTimeout(function() {preview.className += ' editor-preview-active'}, 1);\r\n      toolbar.className += ' active';\r\n    }\r\n    var text = cm.getValue();\r\n    preview.innerHTML = parse(text);\r\n  }\r\n\r\n  function _replaceSelection(cm, active, start, end) {\r\n    var text;\r\n    var startPoint = cm.getCursor('start');\r\n    var endPoint = cm.getCursor('end');\r\n    if (active) {\r\n      text = cm.getLine(startPoint.line);\r\n      start = text.slice(0, startPoint.ch);\r\n      end = text.slice(startPoint.ch);\r\n      cm.setLine(startPoint.line, start + end);\r\n    } else {\r\n      text = cm.getSelection();\r\n      cm.replaceSelection(start + text + end);\r\n\r\n      startPoint.ch += start.length;\r\n      endPoint.ch += start.length;\r\n    }\r\n    cm.setSelection(startPoint, endPoint);\r\n    cm.focus();\r\n  }\r\n\r\n\r\n  function _toggleLine(cm, name) {\r\n    var stat = getState(cm);\r\n    var startPoint = cm.getCursor('start');\r\n    var endPoint = cm.getCursor('end');\r\n    var repl = {\r\n      quote: /^(\\s*)\\>\\s+/,\r\n      'unordered-list': /^(\\s*)(\\*|\\-|\\+)\\s+/,\r\n      'ordered-list': /^(\\s*)\\d+\\.\\s+/\r\n    };\r\n    var map = {\r\n      quote: '> ',\r\n      'unordered-list': '* ',\r\n      'ordered-list': '1. '\r\n    };\r\n    for (var i = startPoint.line; i <= endPoint.line; i++) {\r\n      (function(i) {\r\n        var text = cm.getLine(i);\r\n        if (stat[name]) {\r\n          text = text.replace(repl[name], '$1');\r\n        } else {\r\n          text = map[name] + text;\r\n        }\r\n        cm.setLine(i, text);\r\n      })(i);\r\n    }\r\n    cm.focus();\r\n  }\r\n\r\n  function _toggleBlock(editor, type, start_chars, end_chars){\r\n    end_chars = (typeof end_chars === 'undefined') ? start_chars : end_chars;\r\n    var cm = editor.codemirror;\r\n    var stat = getState(cm);\r\n\r\n    var text;\r\n    var start = start_chars;\r\n    var end = end_chars;\r\n\r\n    var startPoint = cm.getCursor('start');\r\n    var endPoint = cm.getCursor('end');\r\n    if (stat[type]) {\r\n      text = cm.getLine(startPoint.line);\r\n      start = text.slice(0, startPoint.ch);\r\n      end = text.slice(startPoint.ch);\r\n      startRegex = new RegExp(\"/^(.*)?(\\*|\\_){\" + start_chars.length + \"}(\\S+.*)?$/\", \"g\")\r\n      start = start.replace(startRegex, '$1$3');\r\n      endRegex = new RegExp(\"/^(.*\\S+)?(\\*|\\_){\" + end_chars.length + \"}(\\s+.*)?$/\", \"g\")\r\n      end = end.replace(endRegex, '$1$3');\r\n      startPoint.ch -= start_chars.length;\r\n      endPoint.ch -= end_chars.length;\r\n      cm.setLine(startPoint.line, start + end);\r\n    } else {\r\n      text = cm.getSelection();\r\n      cm.replaceSelection(start + text + end);\r\n\r\n      startPoint.ch += start_chars.length;\r\n      endPoint.ch += end_chars.length;\r\n    }\r\n    cm.setSelection(startPoint, endPoint);\r\n    cm.focus();\r\n  }\r\n\r\n\r\n  /* The right word count in respect for CJK. */\r\n  function wordCount(data) {\r\n    var pattern = /[a-zA-Z0-9_\\u0392-\\u03c9]+|[\\u4E00-\\u9FFF\\u3400-\\u4dbf\\uf900-\\ufaff\\u3040-\\u309f\\uac00-\\ud7af]+/g;\r\n    var m = data.match(pattern);\r\n    var count = 0;\r\n    if( m === null ) return count;\r\n    for (var i = 0; i < m.length; i++) {\r\n      if (m[i].charCodeAt(0) >= 0x4E00) {\r\n        count += m[i].length;\r\n      } else {\r\n        count += 1;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n\r\n  var toolbar = [\r\n    {name: 'bold', action: toggleBold},\r\n    {name: 'italic', action: toggleItalic},\r\n    {name: 'code', action: toggleCodeBlock},\r\n    '|',\r\n\r\n    {name: 'quote', action: toggleBlockquote},\r\n    {name: 'unordered-list', action: toggleUnOrderedList},\r\n    {name: 'ordered-list', action: toggleOrderedList},\r\n    '|',\r\n\r\n    {name: 'link', action: drawLink},\r\n    {name: 'image', action: drawImage},\r\n    '|',\r\n\r\n    {name: 'info', action: 'http://lab.lepture.com/editor/markdown'},\r\n    {name: 'preview', action: togglePreview},\r\n    {name: 'fullscreen', action: toggleFullScreen}\r\n  ];\r\n\r\n\r\n\r\n  var Editor = ui.MarkEditor = Widget.inherit({\r\n    klassName : \"MarkEditor\",\r\n\r\n    _construct : function (options) {\r\n      options = options || {};\r\n\r\n      if (options.element) {\r\n        this.element = options.element;\r\n      }\r\n\r\n      options.toolbar = options.toolbar || Editor.toolbar;\r\n      // you can customize toolbar with object\r\n      // [{name: 'bold', shortcut: 'Ctrl-B', className: 'icon-bold'}]\r\n\r\n      if (!options.hasOwnProperty('status')) {\r\n        options.status = ['lines', 'words', 'cursor'];\r\n      }\r\n\r\n      this.options = options;\r\n\r\n      // If user has passed an element, it should auto rendered\r\n      if (this.element) {\r\n        this.render();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Render editor to the given element.\r\n     */\r\n    render : function(el) {\r\n      if (!el) {\r\n        el = this.element || document.getElementsByTagName('textarea')[0];\r\n      }\r\n\r\n      if (this._rendered && this._rendered === el) {\r\n        // Already rendered.\r\n        return;\r\n      }\r\n\r\n      this.element = el;\r\n      var options = this.options;\r\n\r\n      var self = this;\r\n      var keyMaps = {};\r\n\r\n      for (var key in shortcuts) {\r\n        (function(key) {\r\n          keyMaps[fixShortcut(key)] = function(cm) {\r\n            shortcuts[key](self);\r\n          };\r\n        })(key);\r\n      }\r\n\r\n      keyMaps[\"Enter\"] = \"newlineAndIndentContinueMarkdownList\";\r\n      keyMaps['Tab'] = 'tabAndIndentContinueMarkdownList';\r\n      keyMaps['Shift-Tab'] = 'shiftTabAndIndentContinueMarkdownList';\r\n\r\n      this.codemirror = CodeMirror.fromTextArea(el, {\r\n        mode: 'markdown',\r\n        theme: 'paper',\r\n        tabSize: '2',\r\n        indentWithTabs: true,\r\n        lineNumbers: false,\r\n        autofocus: true,\r\n        extraKeys: keyMaps\r\n      });\r\n\r\n      if (options.toolbar !== false) {\r\n        this.createToolbar();\r\n      }\r\n      if (options.status !== false) {\r\n        this.createStatusbar();\r\n      }\r\n\r\n      this._rendered = this.element;\r\n    },\r\n\r\n    createToolbar : function(items) {\r\n      items = items || this.options.toolbar;\r\n\r\n      if (!items || items.length === 0) {\r\n        return;\r\n      }\r\n\r\n      var bar = document.createElement('div');\r\n      bar.className = 'editor-toolbar';\r\n\r\n      var self = this;\r\n\r\n      var el;\r\n      self.toolbar = {};\r\n\r\n      for (var i = 0; i < items.length; i++) {\r\n        (function(item) {\r\n          var el;\r\n          if (item.name) {\r\n            el = createIcon(item.name, item);\r\n          } else if (item === '|') {\r\n            el = createSep();\r\n          } else {\r\n            el = createIcon(item);\r\n          }\r\n\r\n          // bind events, special for info\r\n          if (item.action) {\r\n            if (typeof item.action === 'function') {\r\n              el.onclick = function(e) {\r\n                item.action(self);\r\n              };\r\n            } else if (typeof item.action === 'string') {\r\n              el.href = item.action;\r\n              el.target = '_blank';\r\n            }\r\n          }\r\n          self.toolbar[item.name || item] = el;\r\n          bar.appendChild(el);\r\n        })(items[i]);\r\n      }\r\n\r\n      var cm = this.codemirror;\r\n      cm.on('cursorActivity', function() {\r\n        var stat = getState(cm);\r\n\r\n        for (var key in self.toolbar) {\r\n          (function(key) {\r\n            var el = self.toolbar[key];\r\n            if (stat[key]) {\r\n              el.className += ' active';\r\n            } else {\r\n              el.className = el.className.replace(/\\s*active\\s*/g, '');\r\n            }\r\n          })(key);\r\n        }\r\n      });\r\n\r\n      var cmWrapper = cm.getWrapperElement();\r\n      cmWrapper.parentNode.insertBefore(bar, cmWrapper);\r\n      return bar;\r\n    },\r\n\r\n    createStatusbar : function(status) {\r\n      status = status || this.options.status;\r\n\r\n      if (!status || status.length === 0) return;\r\n\r\n      var bar = document.createElement('div');\r\n      bar.className = 'editor-statusbar';\r\n\r\n      var pos, cm = this.codemirror;\r\n      for (var i = 0; i < status.length; i++) {\r\n        (function(name) {\r\n          var el = document.createElement('span');\r\n          el.className = name;\r\n          if (name === 'words') {\r\n            el.innerHTML = '0';\r\n            cm.on('update', function() {\r\n              el.innerHTML = wordCount(cm.getValue());\r\n            });\r\n          } else if (name === 'lines') {\r\n            el.innerHTML = '0';\r\n            cm.on('update', function() {\r\n              el.innerHTML = cm.lineCount();\r\n            });\r\n          } else if (name === 'cursor') {\r\n            el.innerHTML = '0:0';\r\n            cm.on('cursorActivity', function() {\r\n              pos = cm.getCursor();\r\n              el.innerHTML = pos.line + ':' + pos.ch;\r\n            });\r\n          }\r\n          bar.appendChild(el);\r\n        })(status[i]);\r\n      }\r\n      var cmWrapper = this.codemirror.getWrapperElement();\r\n      cmWrapper.parentNode.insertBefore(bar, cmWrapper.nextSibling);\r\n      return bar;\r\n    },\r\n\r\n    /**\r\n     * Get or set the text content.\r\n     */\r\n    value : function(val) {\r\n      if (val) {\r\n        this.codemirror.getDoc().setValue(val);\r\n        return this;\r\n      } else {\r\n        return this.codemirror.getValue();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Bind instance methods for exports.\r\n     */\r\n    toggleBold : function() {\r\n      toggleBold(this);\r\n    },\r\n\r\n    toggleItalic : function() {\r\n      toggleItalic(this);\r\n    },\r\n\r\n    toggleBlockquote : function() {\r\n      toggleBlockquote(this);\r\n    },\r\n\r\n    toggleUnOrderedList : function() {\r\n      toggleUnOrderedList(this);\r\n    },\r\n\r\n    toggleOrderedList : function() {\r\n      toggleOrderedList(this);\r\n    },\r\n\r\n    drawLink : function() {\r\n      drawLink(this);\r\n    },\r\n\r\n    drawImage : function() {\r\n      drawImage(this);\r\n    },\r\n\r\n    undo : function() {\r\n      undo(this);\r\n    },\r\n\r\n    redo : function() {\r\n      redo(this);\r\n    },\r\n\r\n    togglePreview : function() {\r\n      togglePreview(this);\r\n    },\r\n    toggleFullScreen : function() {\r\n      toggleFullScreen(this);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Default toolbar elements.\r\n   */\r\n  Editor.toolbar = toolbar;\r\n\r\n  /**\r\n   * Default markdown render.\r\n   */\r\n  Editor.markdown = function(text) {\r\n    // use marked as markdown parser\r\n    return MarkParser.parse(text);\r\n  };\r\n\r\n\r\n\r\n  /**\r\n   * Bind static methods for exports.\r\n   */\r\n  Editor.toggleBold = toggleBold;\r\n  Editor.toggleItalic = toggleItalic;\r\n  Editor.toggleBlockquote = toggleBlockquote;\r\n  Editor.toggleUnOrderedList = toggleUnOrderedList;\r\n  Editor.toggleOrderedList = toggleOrderedList;\r\n  Editor.drawLink = drawLink;\r\n  Editor.drawImage = drawImage;\r\n  Editor.undo = undo;\r\n  Editor.redo = redo;\r\n  Editor.togglePreview = togglePreview;\r\n  Editor.toggleFullScreen = toggleFullScreen;\r\n\r\n  return Editor;\r\n});\r\n\ndefine('skylark-ui-markeditor/main',[\r\n    \"./MarkEditor\"\r\n], function(MarkEditor) {\r\n    return MarkEditor;\r\n});\r\n\ndefine('skylark-ui-markeditor', ['skylark-ui-markeditor/main'], function (main) { return main; });\n\n"]}