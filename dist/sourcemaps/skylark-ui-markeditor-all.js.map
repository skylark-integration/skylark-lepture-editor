{"version":3,"sources":["skylark-ui-markeditor-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","isArray","object","constructor","Array","isArrayLike","obj","isString","isHtmlNode","isFunction","isBoolean","isDefined","isDocument","nodeType","DOCUMENT_NODE","isEmptyObject","name","value","type","Node","isNumber","isObject","isPlainObject","isWindow","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","class2type","toLowerCase","String","toString","call","types","createAssigner","keysFunc","defaults","arguments","index","source","keys","l","key","allKeys","each","callback","undef","this","extend","target","deep","slice","shift","arg","mixin","has","path","isEqual","a","b","eq","isMatch","attrs","_mixin","safe","undefined","_parseMixinArgs","params","sources","removeItem","items","item","idx","indexOf","splice","result","fallback","prop","safeMixin","values","_","clone","src","checkCloneMethod","copy","deepEq","SymbolProto","Symbol","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","objects","compact","array","filter","flatten","j","inArray","makeArray","offset","startWith","concat","elements","uniq","first","n","arrays","f1","extendClass","ctor","props","options","proto","_super","superclass","noOverrided","_constructor","fn","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","unshift","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","_construct","init","klassName","__mixins__","partial","inherit","klass","SimpleQueryEngine","query","arr","thisObject","out","cache","buildFn","execute","results","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","test","matches","QueryResults","addIterativeMethod","method","Deferred","when","isPromise","then","delegate","ArrayStore","queryEngine","idProperty","get","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","advise","dispatcher","advice","receiveArguments","signal","previous","around","advised","next","nextId","aspect","methodName","existing","executionId","before","after","newResults","defer","requestAnimationFrame","setTimeoutout","noop","proxy","context","proxyFn","TypeError","debounce","wait","timeout","later","clearTimeout","setTimeout","TMP","returnTrue","returnFalse","funcs","wrapPromise","p","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","Promise","__ctx__","handler","PGLISTENERS","pipe","always","done","fail","self","promise","resolve","reject","_resolve","_reject","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","func","series","waterful","Evented","on","events","selector","one","_hub","trigger","e","CustomEvent","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","dasherize","str","replace","deserializeValue","JSON","parse","trim","substitute","template","transform","getObject","match","retVal","getValue","_k","reverse","v","format","camelCase","toUpperCase","lowerFirst","charAt","serializeValue","stringify","upperFirst","getAbsoluteUrl","url","document","createElement","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","uniqueId","cidPrefix","collection","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","createEvent","funcArg","payload","getQueryParams","segs","queryParam","nv","toPixel","parseFloat","uid","_uid","prefix","idCounter","langx","URL","webkitURL","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","RegExp","cssPropName","isIE","exec","navigator","userAgent","support","end","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","disabled","elm","dom","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","styler","css","isInvisible","hide","addClass","names","re","property","computedStyle","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","activeElement","doc","el","placing","refNode","nextSibling","insertBefore","append","contents","contentDocument","childNodes","tag","setAttribute","createFragment","singleTagRE","$1","fragmentRE","containers","container","innerHTML","getAttribs","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fulledEl","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","rxhtmlTag","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","traverse","wrapper","wrapperNode","wrapperInner","unwrap","noder","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","active","blur","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","descendants","querySelectorAll","matchError","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","backspace","comma","down","enter","home","page_down","page_up","period","right","space","tab","up","transitionEnd","delegateType","special","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","px","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","getOffsets","offsets","rpercent","parseCss","parseInt","getDimensions","pageY","pageX","getScrollInfo","within","overflowX","overflowY","hasOverflowX","hasOverflowY","getWithinInfo","withinElement","hasOffset","msize","posit","atOffset","targetWidth","targetHeight","targetOffset","basePosition","dimensions","of","scrollInfo","collision","at","horizontalOffset","verticalOffset","rhorizontal","rvertical","roffset","rposition","collisionPosition","using","elemWidth","elemHeight","collisionWidth","collisionHeight","myOffset","my","dir","positions","feedback","horizontal","vertical","abs","important","fit","newOverRight","withinOffset","outerWidth","collisionPosLeft","overLeft","overRight","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","flip","newOverLeft","newOverTop","flipfit","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","resetClipAuto","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","wrapper_node_operation","argType","toArray","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","plugin","returnValue","plugins","instantiate","markdown","Lexer","tokens","links","marked","rules","block","gfm","tables","InlineLexer","inline","renderer","Renderer","breaks","pedantic","Parser","token","encode","unescape","fromCharCode","substring","regex","opt","merge","pending","highlight","lex","lang","code","escaped","newline","fences","hr","heading","nptable","lheading","blockquote","list","def","paragraph","bullet","_tag","lexer","bq","loose","cap","bull","depth","cells","ordered","smartLists","sanitize","pre","title","autolink","link","reflink","nolink","strong","em","br","_inside","_href","output","mangle","inLink","outputLink","codespan","smartypants","ch","langPrefix","quote","level","headerPrefix","xhtml","listitem","tablerow","tablecell","flags","prot","decodeURIComponent","tok","peek","parseText","row","cell","setOptions","inlineLexer","ui","sbswt","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isShiftHeld","isKey","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","cleanInput","questionableMarkup","_delegator","domNode","HTMLElement","VisualElement","batch","action","widgets","defineWidgetClass","Widget","_ensureElement","$el","render","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","delegateEventSplitter","undelegate","_createElement","_setAttributes","i18n","messages","MarkParser","fixShortcut","isMac","createIcon","createSep","getState","cm","getCursor","stat","getTokenAt","bold","getLine","line","italic","toggleFullScreen","editor","codemirror","getWrapperElement","isFull","mozFullScreen","webkitIsFullScreen","webkitRequestFullScreen","Element","ALLOW_KEYBOARD_INPUT","cancelFullScreen","toggleBold","_toggleBlock","toggleItalic","toggleCodeBlock","toggleBlockquote","_toggleLine","toggleUnOrderedList","toggleOrderedList","drawLink","_replaceSelection","drawImage","undo","redo","togglePreview","toolbar","preview","startPoint","endPoint","setLine","getSelection","replaceSelection","setSelection","repl","unordered-list","ordered-list","start_chars","end_chars","startRegex","endRegex","wordCount","platform","Cmd-B","Cmd-I","Cmd-K","Cmd-Alt-I","Cmd-'","Cmd-Alt-L","Cmd-L","Editor","MarkEditor","getElementsByTagName","_rendered","keyMaps","CodeMirror","fromTextArea","mode","theme","tabSize","indentWithTabs","lineNumbers","autofocus","extraKeys","createToolbar","createStatusbar","bar","onclick","cmWrapper","lineCount","getDoc","setValue","main"],"mappings":"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","file":"../skylark-ui-markeditor-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/objects',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\",\r\n    \"./objects\"\r\n],function(types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n\t    each: objects.each,\r\n\r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        map : map,\r\n        \r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _construct = props._construct;\r\n            if (!_construct) {\r\n                _construct = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _construct;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        }\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function(handler) {\r\n            this.then(handler);\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return wrapPromise(Promise.all(array));\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./arrays\"\r\n],function(Deferred,arrays){\r\n    var each = arrays.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(klass,objects,types){\r\n\tvar slice = Array.prototype.slice,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n\t\tisFunction = types.isFunction,\r\n\t\tisString = types.isString,\r\n\t\tisEmptyObject = types.isEmptyObject,\r\n\t\tmixin = objects.mixin;\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\treturn Evented;\r\n\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        trim: trim,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = arrays.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./klass\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,Deferred,Evented,funcs,klass,objects,Restful,Stateful,strings,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,funcs,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\ndefine('skylark-utils-dom/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils-dom/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\ndefine('skylark-utils-dom/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transitionEnd) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.geom = geom;\r\n});\ndefine('skylark-utils-dom/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils-dom/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-md/markdown',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n\t\r\n\treturn skylark.markdown = skylark.markdown || {};\r\n});\ndefine('skylark-utils-md/primitives/marked',[],function() {\r\n  /**\r\n   * marked - a markdown parser\r\n   * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\r\n   * https://github.com/chjj/marked\r\n   */\r\n\r\n  /**\r\n   * Block-Level Grammar\r\n   */\r\n\r\n  var block = {\r\n    newline: /^\\n+/,\r\n    code: /^( {4}[^\\n]+\\n*)+/,\r\n    fences: noop,\r\n    hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\r\n    heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\r\n    nptable: noop,\r\n    lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\r\n    blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\r\n    list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\r\n    html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\r\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\r\n    table: noop,\r\n    paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\r\n    text: /^[^\\n]+/\r\n  };\r\n\r\n  block.bullet = /(?:[*+-]|\\d+\\.)/;\r\n  block.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\r\n  block.item = replace(block.item, 'gm')\r\n    (/bull/g, block.bullet)\r\n    ();\r\n\r\n  block.list = replace(block.list)\r\n    (/bull/g, block.bullet)\r\n    ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\r\n    ('def', '\\\\n+(?=' + block.def.source + ')')\r\n    ();\r\n\r\n  block.blockquote = replace(block.blockquote)\r\n    ('def', block.def)\r\n    ();\r\n\r\n  block._tag = '(?!(?:'\r\n    + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\r\n    + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\r\n    + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\r\n\r\n  block.html = replace(block.html)\r\n    ('comment', /<!--[\\s\\S]*?-->/)\r\n    ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\r\n    ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\r\n    (/tag/g, block._tag)\r\n    ();\r\n\r\n  block.paragraph = replace(block.paragraph)\r\n    ('hr', block.hr)\r\n    ('heading', block.heading)\r\n    ('lheading', block.lheading)\r\n    ('blockquote', block.blockquote)\r\n    ('tag', '<' + block._tag)\r\n    ('def', block.def)\r\n    ();\r\n\r\n  /**\r\n   * Normal Block Grammar\r\n   */\r\n\r\n  block.normal = merge({}, block);\r\n\r\n  /**\r\n   * GFM Block Grammar\r\n   */\r\n\r\n  block.gfm = merge({}, block.normal, {\r\n    fences: /^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,\r\n    paragraph: /^/\r\n  });\r\n\r\n  block.gfm.paragraph = replace(block.paragraph)\r\n    ('(?!', '(?!'\r\n      + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\r\n      + block.list.source.replace('\\\\1', '\\\\3') + '|')\r\n    ();\r\n\r\n  /**\r\n   * GFM + Tables Block Grammar\r\n   */\r\n\r\n  block.tables = merge({}, block.gfm, {\r\n    nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\r\n    table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\r\n  });\r\n\r\n  /**\r\n   * Block Lexer\r\n   */\r\n\r\n  function Lexer(options) {\r\n    this.tokens = [];\r\n    this.tokens.links = {};\r\n    this.options = options || marked.defaults;\r\n    this.rules = block.normal;\r\n\r\n    if (this.options.gfm) {\r\n      if (this.options.tables) {\r\n        this.rules = block.tables;\r\n      } else {\r\n        this.rules = block.gfm;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expose Block Rules\r\n   */\r\n\r\n  Lexer.rules = block;\r\n\r\n  /**\r\n   * Static Lex Method\r\n   */\r\n\r\n  Lexer.lex = function(src, options) {\r\n    var lexer = new Lexer(options);\r\n    return lexer.lex(src);\r\n  };\r\n\r\n  /**\r\n   * Preprocessing\r\n   */\r\n\r\n  Lexer.prototype.lex = function(src) {\r\n    src = src\r\n      .replace(/\\r\\n|\\r/g, '\\n')\r\n      .replace(/\\t/g, '    ')\r\n      .replace(/\\u00a0/g, ' ')\r\n      .replace(/\\u2424/g, '\\n');\r\n\r\n    return this.token(src, true);\r\n  };\r\n\r\n  /**\r\n   * Lexing\r\n   */\r\n\r\n  Lexer.prototype.token = function(src, top, bq) {\r\n    var src = src.replace(/^ +$/gm, '')\r\n      , next\r\n      , loose\r\n      , cap\r\n      , bull\r\n      , b\r\n      , item\r\n      , space\r\n      , i\r\n      , l;\r\n\r\n    while (src) {\r\n      // newline\r\n      if (cap = this.rules.newline.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        if (cap[0].length > 1) {\r\n          this.tokens.push({\r\n            type: 'space'\r\n          });\r\n        }\r\n      }\r\n\r\n      // code\r\n      if (cap = this.rules.code.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        cap = cap[0].replace(/^ {4}/gm, '');\r\n        this.tokens.push({\r\n          type: 'code',\r\n          text: !this.options.pedantic\r\n            ? cap.replace(/\\n+$/, '')\r\n            : cap\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // fences (gfm)\r\n      if (cap = this.rules.fences.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'code',\r\n          lang: cap[2],\r\n          text: cap[3]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // heading\r\n      if (cap = this.rules.heading.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'heading',\r\n          depth: cap[1].length,\r\n          text: cap[2]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // table no leading pipe (gfm)\r\n      if (top && (cap = this.rules.nptable.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n\r\n        item = {\r\n          type: 'table',\r\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\r\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\r\n          cells: cap[3].replace(/\\n$/, '').split('\\n')\r\n        };\r\n\r\n        for (i = 0; i < item.align.length; i++) {\r\n          if (/^ *-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'right';\r\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'center';\r\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\r\n            item.align[i] = 'left';\r\n          } else {\r\n            item.align[i] = null;\r\n          }\r\n        }\r\n\r\n        for (i = 0; i < item.cells.length; i++) {\r\n          item.cells[i] = item.cells[i].split(/ *\\| */);\r\n        }\r\n\r\n        this.tokens.push(item);\r\n\r\n        continue;\r\n      }\r\n\r\n      // lheading\r\n      if (cap = this.rules.lheading.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'heading',\r\n          depth: cap[2] === '=' ? 1 : 2,\r\n          text: cap[1]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // hr\r\n      if (cap = this.rules.hr.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'hr'\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // blockquote\r\n      if (cap = this.rules.blockquote.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n\r\n        this.tokens.push({\r\n          type: 'blockquote_start'\r\n        });\r\n\r\n        cap = cap[0].replace(/^ *> ?/gm, '');\r\n\r\n        // Pass `top` to keep the current\r\n        // \"toplevel\" state. This is exactly\r\n        // how markdown.pl works.\r\n        this.token(cap, top, true);\r\n\r\n        this.tokens.push({\r\n          type: 'blockquote_end'\r\n        });\r\n\r\n        continue;\r\n      }\r\n\r\n      // list\r\n      if (cap = this.rules.list.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        bull = cap[2];\r\n\r\n        this.tokens.push({\r\n          type: 'list_start',\r\n          ordered: bull.length > 1\r\n        });\r\n\r\n        // Get each top-level item.\r\n        cap = cap[0].match(this.rules.item);\r\n\r\n        next = false;\r\n        l = cap.length;\r\n        i = 0;\r\n\r\n        for (; i < l; i++) {\r\n          item = cap[i];\r\n\r\n          // Remove the list item's bullet\r\n          // so it is seen as the next token.\r\n          space = item.length;\r\n          item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\r\n\r\n          // Outdent whatever the\r\n          // list item contains. Hacky.\r\n          if (~item.indexOf('\\n ')) {\r\n            space -= item.length;\r\n            item = !this.options.pedantic\r\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\r\n              : item.replace(/^ {1,4}/gm, '');\r\n          }\r\n\r\n          // Determine whether the next list item belongs here.\r\n          // Backpedal if it does not belong in this list.\r\n          if (this.options.smartLists && i !== l - 1) {\r\n            b = block.bullet.exec(cap[i + 1])[0];\r\n            if (bull !== b && !(bull.length > 1 && b.length > 1)) {\r\n              src = cap.slice(i + 1).join('\\n') + src;\r\n              i = l - 1;\r\n            }\r\n          }\r\n\r\n          // Determine whether item is loose or not.\r\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\r\n          // for discount behavior.\r\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\r\n          if (i !== l - 1) {\r\n            next = item.charAt(item.length - 1) === '\\n';\r\n            if (!loose) loose = next;\r\n          }\r\n\r\n          this.tokens.push({\r\n            type: loose\r\n              ? 'loose_item_start'\r\n              : 'list_item_start'\r\n          });\r\n\r\n          // Recurse.\r\n          this.token(item, false, bq);\r\n\r\n          this.tokens.push({\r\n            type: 'list_item_end'\r\n          });\r\n        }\r\n\r\n        this.tokens.push({\r\n          type: 'list_end'\r\n        });\r\n\r\n        continue;\r\n      }\r\n\r\n      // html\r\n      if (cap = this.rules.html.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: this.options.sanitize\r\n            ? 'paragraph'\r\n            : 'html',\r\n          pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\r\n          text: cap[0]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // def\r\n      if ((!bq && top) && (cap = this.rules.def.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.links[cap[1].toLowerCase()] = {\r\n          href: cap[2],\r\n          title: cap[3]\r\n        };\r\n        continue;\r\n      }\r\n\r\n      // table (gfm)\r\n      if (top && (cap = this.rules.table.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n\r\n        item = {\r\n          type: 'table',\r\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\r\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\r\n          cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\r\n        };\r\n\r\n        for (i = 0; i < item.align.length; i++) {\r\n          if (/^ *-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'right';\r\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'center';\r\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\r\n            item.align[i] = 'left';\r\n          } else {\r\n            item.align[i] = null;\r\n          }\r\n        }\r\n\r\n        for (i = 0; i < item.cells.length; i++) {\r\n          item.cells[i] = item.cells[i]\r\n            .replace(/^ *\\| *| *\\| *$/g, '')\r\n            .split(/ *\\| */);\r\n        }\r\n\r\n        this.tokens.push(item);\r\n\r\n        continue;\r\n      }\r\n\r\n      // top-level paragraph\r\n      if (top && (cap = this.rules.paragraph.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'paragraph',\r\n          text: cap[1].charAt(cap[1].length - 1) === '\\n'\r\n            ? cap[1].slice(0, -1)\r\n            : cap[1]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // text\r\n      if (cap = this.rules.text.exec(src)) {\r\n        // Top-level should never reach here.\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'text',\r\n          text: cap[0]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      if (src) {\r\n        throw new\r\n          Error('Infinite loop on byte: ' + src.charCodeAt(0));\r\n      }\r\n    }\r\n\r\n    return this.tokens;\r\n  };\r\n\r\n  /**\r\n   * Inline-Level Grammar\r\n   */\r\n\r\n  var inline = {\r\n    escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\r\n    autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\r\n    url: noop,\r\n    tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\r\n    link: /^!?\\[(inside)\\]\\(href\\)/,\r\n    reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\r\n    nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\r\n    strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\r\n    em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\r\n    code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\r\n    br: /^ {2,}\\n(?!\\s*$)/,\r\n    del: noop,\r\n    text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\r\n  };\r\n\r\n  inline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\r\n  inline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\r\n\r\n  inline.link = replace(inline.link)\r\n    ('inside', inline._inside)\r\n    ('href', inline._href)\r\n    ();\r\n\r\n  inline.reflink = replace(inline.reflink)\r\n    ('inside', inline._inside)\r\n    ();\r\n\r\n  /**\r\n   * Normal Inline Grammar\r\n   */\r\n\r\n  inline.normal = merge({}, inline);\r\n\r\n  /**\r\n   * Pedantic Inline Grammar\r\n   */\r\n\r\n  inline.pedantic = merge({}, inline.normal, {\r\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\r\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\r\n  });\r\n\r\n  /**\r\n   * GFM Inline Grammar\r\n   */\r\n\r\n  inline.gfm = merge({}, inline.normal, {\r\n    escape: replace(inline.escape)('])', '~|])')(),\r\n    url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\r\n    del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\r\n    text: replace(inline.text)\r\n      (']|', '~]|')\r\n      ('|', '|https?://|')\r\n      ()\r\n  });\r\n\r\n  /**\r\n   * GFM + Line Breaks Inline Grammar\r\n   */\r\n\r\n  inline.breaks = merge({}, inline.gfm, {\r\n    br: replace(inline.br)('{2,}', '*')(),\r\n    text: replace(inline.gfm.text)('{2,}', '*')()\r\n  });\r\n\r\n  /**\r\n   * Inline Lexer & Compiler\r\n   */\r\n\r\n  function InlineLexer(links, options) {\r\n    this.options = options || marked.defaults;\r\n    this.links = links;\r\n    this.rules = inline.normal;\r\n    this.renderer = this.options.renderer || new Renderer;\r\n    this.renderer.options = this.options;\r\n\r\n    if (!this.links) {\r\n      throw new\r\n        Error('Tokens array requires a `links` property.');\r\n    }\r\n\r\n    if (this.options.gfm) {\r\n      if (this.options.breaks) {\r\n        this.rules = inline.breaks;\r\n      } else {\r\n        this.rules = inline.gfm;\r\n      }\r\n    } else if (this.options.pedantic) {\r\n      this.rules = inline.pedantic;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expose Inline Rules\r\n   */\r\n\r\n  InlineLexer.rules = inline;\r\n\r\n  /**\r\n   * Static Lexing/Compiling Method\r\n   */\r\n\r\n  InlineLexer.output = function(src, links, options) {\r\n    var inline = new InlineLexer(links, options);\r\n    return inline.output(src);\r\n  };\r\n\r\n  /**\r\n   * Lexing/Compiling\r\n   */\r\n\r\n  InlineLexer.prototype.output = function(src) {\r\n    var out = ''\r\n      , link\r\n      , text\r\n      , href\r\n      , cap;\r\n\r\n    while (src) {\r\n      // escape\r\n      if (cap = this.rules.escape.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += cap[1];\r\n        continue;\r\n      }\r\n\r\n      // autolink\r\n      if (cap = this.rules.autolink.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        if (cap[2] === '@') {\r\n          text = cap[1].charAt(6) === ':'\r\n            ? this.mangle(cap[1].substring(7))\r\n            : this.mangle(cap[1]);\r\n          href = this.mangle('mailto:') + text;\r\n        } else {\r\n          text = escape(cap[1]);\r\n          href = text;\r\n        }\r\n        out += this.renderer.link(href, null, text);\r\n        continue;\r\n      }\r\n\r\n      // url (gfm)\r\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        text = escape(cap[1]);\r\n        href = text;\r\n        out += this.renderer.link(href, null, text);\r\n        continue;\r\n      }\r\n\r\n      // tag\r\n      if (cap = this.rules.tag.exec(src)) {\r\n        if (!this.inLink && /^<a /i.test(cap[0])) {\r\n          this.inLink = true;\r\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\r\n          this.inLink = false;\r\n        }\r\n        src = src.substring(cap[0].length);\r\n        out += this.options.sanitize\r\n          ? escape(cap[0])\r\n          : cap[0];\r\n        continue;\r\n      }\r\n\r\n      // link\r\n      if (cap = this.rules.link.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.inLink = true;\r\n        out += this.outputLink(cap, {\r\n          href: cap[2],\r\n          title: cap[3]\r\n        });\r\n        this.inLink = false;\r\n        continue;\r\n      }\r\n\r\n      // reflink, nolink\r\n      if ((cap = this.rules.reflink.exec(src))\r\n          || (cap = this.rules.nolink.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\r\n        link = this.links[link.toLowerCase()];\r\n        if (!link || !link.href) {\r\n          out += cap[0].charAt(0);\r\n          src = cap[0].substring(1) + src;\r\n          continue;\r\n        }\r\n        this.inLink = true;\r\n        out += this.outputLink(cap, link);\r\n        this.inLink = false;\r\n        continue;\r\n      }\r\n\r\n      // strong\r\n      if (cap = this.rules.strong.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.strong(this.output(cap[2] || cap[1]));\r\n        continue;\r\n      }\r\n\r\n      // em\r\n      if (cap = this.rules.em.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.em(this.output(cap[2] || cap[1]));\r\n        continue;\r\n      }\r\n\r\n      // code\r\n      if (cap = this.rules.code.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.codespan(escape(cap[2], true));\r\n        continue;\r\n      }\r\n\r\n      // br\r\n      if (cap = this.rules.br.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.br();\r\n        continue;\r\n      }\r\n\r\n      // del (gfm)\r\n      if (cap = this.rules.del.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.del(this.output(cap[1]));\r\n        continue;\r\n      }\r\n\r\n      // text\r\n      if (cap = this.rules.text.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += escape(this.smartypants(cap[0]));\r\n        continue;\r\n      }\r\n\r\n      if (src) {\r\n        throw new\r\n          Error('Infinite loop on byte: ' + src.charCodeAt(0));\r\n      }\r\n    }\r\n\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Compile Link\r\n   */\r\n\r\n  InlineLexer.prototype.outputLink = function(cap, link) {\r\n    var href = escape(link.href)\r\n      , title = link.title ? escape(link.title) : null;\r\n\r\n    return cap[0].charAt(0) !== '!'\r\n      ? this.renderer.link(href, title, this.output(cap[1]))\r\n      : this.renderer.image(href, title, escape(cap[1]));\r\n  };\r\n\r\n  /**\r\n   * Smartypants Transformations\r\n   */\r\n\r\n  InlineLexer.prototype.smartypants = function(text) {\r\n    if (!this.options.smartypants) return text;\r\n    return text\r\n      // em-dashes\r\n      .replace(/--/g, '\\u2014')\r\n      // opening singles\r\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\r\n      // closing singles & apostrophes\r\n      .replace(/'/g, '\\u2019')\r\n      // opening doubles\r\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\r\n      // closing doubles\r\n      .replace(/\"/g, '\\u201d')\r\n      // ellipses\r\n      .replace(/\\.{3}/g, '\\u2026');\r\n  };\r\n\r\n  /**\r\n   * Mangle Links\r\n   */\r\n\r\n  InlineLexer.prototype.mangle = function(text) {\r\n    var out = ''\r\n      , l = text.length\r\n      , i = 0\r\n      , ch;\r\n\r\n    for (; i < l; i++) {\r\n      ch = text.charCodeAt(i);\r\n      if (Math.random() > 0.5) {\r\n        ch = 'x' + ch.toString(16);\r\n      }\r\n      out += '&#' + ch + ';';\r\n    }\r\n\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Renderer\r\n   */\r\n\r\n  function Renderer(options) {\r\n    this.options = options || {};\r\n  }\r\n\r\n  Renderer.prototype.code = function(code, lang, escaped) {\r\n    if (this.options.highlight) {\r\n      var out = this.options.highlight(code, lang);\r\n      if (out != null && out !== code) {\r\n        escaped = true;\r\n        code = out;\r\n      }\r\n    }\r\n\r\n    if (!lang) {\r\n      return '<pre><code>'\r\n        + (escaped ? code : escape(code, true))\r\n        + '\\n</code></pre>';\r\n    }\r\n\r\n    return '<pre><code class=\"'\r\n      + this.options.langPrefix\r\n      + escape(lang, true)\r\n      + '\">'\r\n      + (escaped ? code : escape(code, true))\r\n      + '\\n</code></pre>\\n';\r\n  };\r\n\r\n  Renderer.prototype.blockquote = function(quote) {\r\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\r\n  };\r\n\r\n  Renderer.prototype.html = function(html) {\r\n    return html;\r\n  };\r\n\r\n  Renderer.prototype.heading = function(text, level, raw) {\r\n    return '<h'\r\n      + level\r\n      + ' id=\"'\r\n      + this.options.headerPrefix\r\n      + raw.toLowerCase().replace(/[^\\w]+/g, '-')\r\n      + '\">'\r\n      + text\r\n      + '</h'\r\n      + level\r\n      + '>\\n';\r\n  };\r\n\r\n  Renderer.prototype.hr = function() {\r\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\r\n  };\r\n\r\n  Renderer.prototype.list = function(body, ordered) {\r\n    var type = ordered ? 'ol' : 'ul';\r\n    return '<' + type + '>\\n' + body + '</' + type + '>\\n';\r\n  };\r\n\r\n  Renderer.prototype.listitem = function(text) {\r\n    return '<li>' + text + '</li>\\n';\r\n  };\r\n\r\n  Renderer.prototype.paragraph = function(text) {\r\n    return '<p>' + text + '</p>\\n';\r\n  };\r\n\r\n  Renderer.prototype.table = function(header, body) {\r\n    return '<table>\\n'\r\n      + '<thead>\\n'\r\n      + header\r\n      + '</thead>\\n'\r\n      + '<tbody>\\n'\r\n      + body\r\n      + '</tbody>\\n'\r\n      + '</table>\\n';\r\n  };\r\n\r\n  Renderer.prototype.tablerow = function(content) {\r\n    return '<tr>\\n' + content + '</tr>\\n';\r\n  };\r\n\r\n  Renderer.prototype.tablecell = function(content, flags) {\r\n    var type = flags.header ? 'th' : 'td';\r\n    var tag = flags.align\r\n      ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\r\n      : '<' + type + '>';\r\n    return tag + content + '</' + type + '>\\n';\r\n  };\r\n\r\n  // span level renderer\r\n  Renderer.prototype.strong = function(text) {\r\n    return '<strong>' + text + '</strong>';\r\n  };\r\n\r\n  Renderer.prototype.em = function(text) {\r\n    return '<em>' + text + '</em>';\r\n  };\r\n\r\n  Renderer.prototype.codespan = function(text) {\r\n    return '<code>' + text + '</code>';\r\n  };\r\n\r\n  Renderer.prototype.br = function() {\r\n    return this.options.xhtml ? '<br/>' : '<br>';\r\n  };\r\n\r\n  Renderer.prototype.del = function(text) {\r\n    return '<del>' + text + '</del>';\r\n  };\r\n\r\n  Renderer.prototype.link = function(href, title, text) {\r\n    if (this.options.sanitize) {\r\n      try {\r\n        var prot = decodeURIComponent(unescape(href))\r\n          .replace(/[^\\w:]/g, '')\r\n          .toLowerCase();\r\n      } catch (e) {\r\n        return '';\r\n      }\r\n      if (prot.indexOf('javascript:') === 0) {\r\n        return '';\r\n      }\r\n    }\r\n    var out = '<a href=\"' + href + '\"';\r\n    if (title) {\r\n      out += ' title=\"' + title + '\"';\r\n    }\r\n    out += '>' + text + '</a>';\r\n    return out;\r\n  };\r\n\r\n  Renderer.prototype.image = function(href, title, text) {\r\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\r\n    if (title) {\r\n      out += ' title=\"' + title + '\"';\r\n    }\r\n    out += this.options.xhtml ? '/>' : '>';\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Parsing & Compiling\r\n   */\r\n\r\n  function Parser(options) {\r\n    this.tokens = [];\r\n    this.token = null;\r\n    this.options = options || marked.defaults;\r\n    this.options.renderer = this.options.renderer || new Renderer;\r\n    this.renderer = this.options.renderer;\r\n    this.renderer.options = this.options;\r\n  }\r\n\r\n  /**\r\n   * Static Parse Method\r\n   */\r\n\r\n  Parser.parse = function(src, options, renderer) {\r\n    var parser = new Parser(options, renderer);\r\n    return parser.parse(src);\r\n  };\r\n\r\n  /**\r\n   * Parse Loop\r\n   */\r\n\r\n  Parser.prototype.parse = function(src) {\r\n    this.inline = new InlineLexer(src.links, this.options, this.renderer);\r\n    this.tokens = src.reverse();\r\n\r\n    var out = '';\r\n    while (this.next()) {\r\n      out += this.tok();\r\n    }\r\n\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Next Token\r\n   */\r\n\r\n  Parser.prototype.next = function() {\r\n    return this.token = this.tokens.pop();\r\n  };\r\n\r\n  /**\r\n   * Preview Next Token\r\n   */\r\n\r\n  Parser.prototype.peek = function() {\r\n    return this.tokens[this.tokens.length - 1] || 0;\r\n  };\r\n\r\n  /**\r\n   * Parse Text Tokens\r\n   */\r\n\r\n  Parser.prototype.parseText = function() {\r\n    var body = this.token.text;\r\n\r\n    while (this.peek().type === 'text') {\r\n      body += '\\n' + this.next().text;\r\n    }\r\n\r\n    return this.inline.output(body);\r\n  };\r\n\r\n  /**\r\n   * Parse Current Token\r\n   */\r\n\r\n  Parser.prototype.tok = function() {\r\n    switch (this.token.type) {\r\n      case 'space': {\r\n        return '';\r\n      }\r\n      case 'hr': {\r\n        return this.renderer.hr();\r\n      }\r\n      case 'heading': {\r\n        return this.renderer.heading(\r\n          this.inline.output(this.token.text),\r\n          this.token.depth,\r\n          this.token.text);\r\n      }\r\n      case 'code': {\r\n        return this.renderer.code(this.token.text,\r\n          this.token.lang,\r\n          this.token.escaped);\r\n      }\r\n      case 'table': {\r\n        var header = ''\r\n          , body = ''\r\n          , i\r\n          , row\r\n          , cell\r\n          , flags\r\n          , j;\r\n\r\n        // header\r\n        cell = '';\r\n        for (i = 0; i < this.token.header.length; i++) {\r\n          flags = { header: true, align: this.token.align[i] };\r\n          cell += this.renderer.tablecell(\r\n            this.inline.output(this.token.header[i]),\r\n            { header: true, align: this.token.align[i] }\r\n          );\r\n        }\r\n        header += this.renderer.tablerow(cell);\r\n\r\n        for (i = 0; i < this.token.cells.length; i++) {\r\n          row = this.token.cells[i];\r\n\r\n          cell = '';\r\n          for (j = 0; j < row.length; j++) {\r\n            cell += this.renderer.tablecell(\r\n              this.inline.output(row[j]),\r\n              { header: false, align: this.token.align[j] }\r\n            );\r\n          }\r\n\r\n          body += this.renderer.tablerow(cell);\r\n        }\r\n        return this.renderer.table(header, body);\r\n      }\r\n      case 'blockquote_start': {\r\n        var body = '';\r\n\r\n        while (this.next().type !== 'blockquote_end') {\r\n          body += this.tok();\r\n        }\r\n\r\n        return this.renderer.blockquote(body);\r\n      }\r\n      case 'list_start': {\r\n        var body = ''\r\n          , ordered = this.token.ordered;\r\n\r\n        while (this.next().type !== 'list_end') {\r\n          body += this.tok();\r\n        }\r\n\r\n        return this.renderer.list(body, ordered);\r\n      }\r\n      case 'list_item_start': {\r\n        var body = '';\r\n\r\n        while (this.next().type !== 'list_item_end') {\r\n          body += this.token.type === 'text'\r\n            ? this.parseText()\r\n            : this.tok();\r\n        }\r\n\r\n        return this.renderer.listitem(body);\r\n      }\r\n      case 'loose_item_start': {\r\n        var body = '';\r\n\r\n        while (this.next().type !== 'list_item_end') {\r\n          body += this.tok();\r\n        }\r\n\r\n        return this.renderer.listitem(body);\r\n      }\r\n      case 'html': {\r\n        var html = !this.token.pre && !this.options.pedantic\r\n          ? this.inline.output(this.token.text)\r\n          : this.token.text;\r\n        return this.renderer.html(html);\r\n      }\r\n      case 'paragraph': {\r\n        return this.renderer.paragraph(this.inline.output(this.token.text));\r\n      }\r\n      case 'text': {\r\n        return this.renderer.paragraph(this.parseText());\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Helpers\r\n   */\r\n\r\n  function escape(html, encode) {\r\n    return html\r\n      .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;')\r\n      .replace(/\"/g, '&quot;')\r\n      .replace(/'/g, '&#39;');\r\n  }\r\n\r\n  function unescape(html) {\r\n    return html.replace(/&([#\\w]+);/g, function(_, n) {\r\n      n = n.toLowerCase();\r\n      if (n === 'colon') return ':';\r\n      if (n.charAt(0) === '#') {\r\n        return n.charAt(1) === 'x'\r\n          ? String.fromCharCode(parseInt(n.substring(2), 16))\r\n          : String.fromCharCode(+n.substring(1));\r\n      }\r\n      return '';\r\n    });\r\n  }\r\n\r\n  function replace(regex, opt) {\r\n    regex = regex.source;\r\n    opt = opt || '';\r\n    return function self(name, val) {\r\n      if (!name) return new RegExp(regex, opt);\r\n      val = val.source || val;\r\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\r\n      regex = regex.replace(name, val);\r\n      return self;\r\n    };\r\n  }\r\n\r\n  function noop() {}\r\n  noop.exec = noop;\r\n\r\n  function merge(obj) {\r\n    var i = 1\r\n      , target\r\n      , key;\r\n\r\n    for (; i < arguments.length; i++) {\r\n      target = arguments[i];\r\n      for (key in target) {\r\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\r\n          obj[key] = target[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n\r\n  /**\r\n   * Marked\r\n   */\r\n\r\n  function marked(src, opt, callback) {\r\n    if (callback || typeof opt === 'function') {\r\n      if (!callback) {\r\n        callback = opt;\r\n        opt = null;\r\n      }\r\n\r\n      opt = merge({}, marked.defaults, opt || {});\r\n\r\n      var highlight = opt.highlight\r\n        , tokens\r\n        , pending\r\n        , i = 0;\r\n\r\n      try {\r\n        tokens = Lexer.lex(src, opt)\r\n      } catch (e) {\r\n        return callback(e);\r\n      }\r\n\r\n      pending = tokens.length;\r\n\r\n      var done = function(err) {\r\n        if (err) {\r\n          opt.highlight = highlight;\r\n          return callback(err);\r\n        }\r\n\r\n        var out;\r\n\r\n        try {\r\n          out = Parser.parse(tokens, opt);\r\n        } catch (e) {\r\n          err = e;\r\n        }\r\n\r\n        opt.highlight = highlight;\r\n\r\n        return err\r\n          ? callback(err)\r\n          : callback(null, out);\r\n      };\r\n\r\n      if (!highlight || highlight.length < 3) {\r\n        return done();\r\n      }\r\n\r\n      delete opt.highlight;\r\n\r\n      if (!pending) return done();\r\n\r\n      for (; i < tokens.length; i++) {\r\n        (function(token) {\r\n          if (token.type !== 'code') {\r\n            return --pending || done();\r\n          }\r\n          return highlight(token.text, token.lang, function(err, code) {\r\n            if (err) return done(err);\r\n            if (code == null || code === token.text) {\r\n              return --pending || done();\r\n            }\r\n            token.text = code;\r\n            token.escaped = true;\r\n            --pending || done();\r\n          });\r\n        })(tokens[i]);\r\n      }\r\n\r\n      return;\r\n    }\r\n    try {\r\n      if (opt) opt = merge({}, marked.defaults, opt);\r\n      return Parser.parse(Lexer.lex(src, opt), opt);\r\n    } catch (e) {\r\n      e.message += '\\nPlease report this to https://github.com/chjj/marked.';\r\n      if ((opt || marked.defaults).silent) {\r\n        return '<p>An error occured:</p><pre>'\r\n          + escape(e.message + '', true)\r\n          + '</pre>';\r\n      }\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Options\r\n   */\r\n\r\n  marked.options =\r\n  marked.setOptions = function(opt) {\r\n    merge(marked.defaults, opt);\r\n    return marked;\r\n  };\r\n\r\n  marked.defaults = {\r\n    gfm: true,\r\n    tables: true,\r\n    breaks: false,\r\n    pedantic: false,\r\n    sanitize: false,\r\n    smartLists: false,\r\n    silent: false,\r\n    highlight: null,\r\n    langPrefix: 'lang-',\r\n    smartypants: false,\r\n    headerPrefix: '',\r\n    renderer: new Renderer,\r\n    xhtml: false\r\n  };\r\n\r\n  /**\r\n   * Expose\r\n   */\r\n\r\n  marked.Parser = Parser;\r\n  marked.parser = Parser.parse;\r\n\r\n  marked.Renderer = Renderer;\r\n\r\n  marked.Lexer = Lexer;\r\n  marked.lexer = Lexer.lex;\r\n\r\n  marked.InlineLexer = InlineLexer;\r\n  marked.inlineLexer = InlineLexer.output;\r\n\r\n  marked.parse = marked;\r\n\r\n  return marked;\r\n});\ndefine('skylark-utils-md/Parser',[\r\n\t\"skylark-langx/langx\",\r\n    \"./markdown\",\r\n    \"./primitives/marked\"\r\n], function(langx,markdown, marked) {\r\n\tvar Parser = marked.Parser;\r\n\r\n   langx.mixin(Parser,marked);\r\n\r\n   return Parser ;\r\n});\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"skylark-utils-dom/browser\"\r\n], function(browser) {\r\n    return browser;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"skylark-utils-dom/eventer\"\r\n], function(eventer) {\r\n    return eventer;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"skylark-utils-dom/noder\"\r\n], function(noder) {\r\n    return noder;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"skylark-utils-dom/geom\"\r\n], function(geom) {\r\n    return geom;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"skylark-utils-dom/query\"\r\n], function(query) {\r\n    return query;\r\n});\r\n\ndefine('skylark-ui-swt/ui',[\r\n  \"skylark-utils/skylark\",\r\n  \"skylark-utils/langx\",\r\n  \"skylark-utils/browser\",\r\n  \"skylark-utils/eventer\",\r\n  \"skylark-utils/noder\",\r\n  \"skylark-utils/geom\",\r\n  \"skylark-utils/query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\tvar ui = skylark.ui = skylark.ui || {};\r\n\t\tsbswt = ui.sbswt = {};\r\n\r\n\tvar CONST = {\r\n\t\tBACKSPACE_KEYCODE: 8,\r\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\r\n\t\tDELETE_KEYCODE: 46,\r\n\t\tDOWN_ARROW_KEYCODE: 40,\r\n\t\tENTER_KEYCODE: 13,\r\n\t\tTAB_KEYCODE: 9,\r\n\t\tUP_ARROW_KEYCODE: 38\r\n\t};\r\n\r\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\r\n\r\n\tvar isKey = function isKey (keyCode) {\r\n\t\treturn function compareKeycodes (e) {\r\n\t\t\treturn e.keyCode === keyCode;\r\n\t\t};\r\n\t};\r\n\r\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\r\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\r\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\r\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\r\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\r\n\r\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\r\n\t/*\r\n\t * to prevent double encoding decodes content in loop until content is encoding free\r\n\t */\r\n\tvar cleanInput = function cleanInput (questionableMarkup) {\r\n\t\t// check for encoding and decode\r\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\r\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\r\n\t\t}\r\n\r\n\t\t// string completely decoded now encode it\r\n\t\treturn $('<i>').text(questionableMarkup).html();\r\n\t};\r\n\r\n\tlangx.mixin(ui, {\r\n\t\tCONST: CONST,\r\n\t\tcleanInput: cleanInput,\r\n\t\tisBackspaceKey: isBackspaceKey,\r\n\t\tisDeleteKey: isDeleteKey,\r\n\t\tisShiftHeld: isShiftHeld,\r\n\t\tisTabKey: isTabKey,\r\n\t\tisUpArrow: isUpArrow,\r\n\t\tisDownArrow: isDownArrow\r\n\t});\r\n\r\n\treturn ui;\r\n\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"skylark-utils-dom/datax\"\r\n], function(datax) {\r\n    return datax;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\ndefine('skylark-utils-dom/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n\r\n    return skylark.velm = velm;\r\n});\ndefine('skylark-utils/velm',[\r\n    \"skylark-utils-dom/velm\"\r\n], function(velm) {\r\n    return velm;\r\n});\r\n\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(el,options) {\r\n\t    \t//for supporting init(options,el)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) { \r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // query delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\ndefine('skylark-ui-swt/Widget',[\r\n  \"skylark-utils/skylark\",\r\n  \"skylark-utils/langx\",\r\n  \"skylark-utils/browser\",\r\n  \"skylark-utils/eventer\",\r\n  \"skylark-utils/noder\",\r\n  \"skylark-utils/geom\",\r\n  \"skylark-utils/query\",\r\n  \"skylark-utils/widgets\",\r\n  \"./ui\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$,widgets,ui){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n\tvar Widget = widgets.Widget.inherit({\r\n        klassName: \"Widget\"\r\n    });\r\n\r\n\treturn ui.Widget = Widget;\r\n});\r\n\ndefine('skylark-ui-markeditor/MarkEditor',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/finder\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-md/Parser\",\r\n  \"skylark-ui-swt/ui\",\r\n  \"skylark-ui-swt/Widget\"\r\n],function(skylark, langx, browser, noder, eventer,finder, $, MarkParser, ui, Widget) {\r\n\r\n  var isMac = /Mac/.test(navigator.platform);\r\n\r\n  var shortcuts = {\r\n    'Cmd-B': toggleBold,\r\n    'Cmd-I': toggleItalic,\r\n    'Cmd-K': drawLink,\r\n    'Cmd-Alt-I': drawImage,\r\n    \"Cmd-'\": toggleBlockquote,\r\n    'Cmd-Alt-L': toggleOrderedList,\r\n    'Cmd-L': toggleUnOrderedList\r\n  };\r\n\r\n\r\n  /**\r\n   * Fix shortcut. Mac use Command, others use Ctrl.\r\n   */\r\n  function fixShortcut(name) {\r\n    if (isMac) {\r\n      name = name.replace('Ctrl', 'Cmd');\r\n    } else {\r\n      name = name.replace('Cmd', 'Ctrl');\r\n    }\r\n    return name;\r\n  }\r\n\r\n  /**\r\n   * Create icon element for toolbar.\r\n   */\r\n  function createIcon(name, options) {\r\n    options = options || {};\r\n    var el = document.createElement('a');\r\n\r\n    var shortcut = options.shortcut || shortcuts[name];\r\n    if (shortcut) {\r\n      shortcut = fixShortcut(shortcut);\r\n      el.title = shortcut;\r\n      el.title = el.title.replace('Cmd', '⌘');\r\n      if (isMac) {\r\n        el.title = el.title.replace('Alt', '⌥');\r\n      }\r\n    }\r\n\r\n    el.className = options.className || 'editor-icon-' + name;\r\n    return el;\r\n  }\r\n\r\n  function createSep() {\r\n    el = document.createElement('i');\r\n    el.className = 'separator';\r\n    el.innerHTML = '|';\r\n    return el;\r\n  }\r\n\r\n\r\n  /**\r\n   * The state of CodeMirror at the given position.\r\n   */\r\n  function getState(cm, pos) {\r\n    pos = pos || cm.getCursor('start');\r\n    var stat = cm.getTokenAt(pos);\r\n    if (!stat.type) return {};\r\n\r\n    var types = stat.type.split(' ');\r\n\r\n    var ret = {}, data, text;\r\n    for (var i = 0; i < types.length; i++) {\r\n      data = types[i];\r\n      if (data === 'strong') {\r\n        ret.bold = true;\r\n      } else if (data === 'variable-2') {\r\n        text = cm.getLine(pos.line);\r\n        if (/^\\s*\\d+\\.\\s/.test(text)) {\r\n          ret['ordered-list'] = true;\r\n        } else {\r\n          ret['unordered-list'] = true;\r\n        }\r\n      } else if (data === 'atom') {\r\n        ret.quote = true;\r\n      } else if (data === 'em') {\r\n        ret.italic = true;\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n\r\n  /**\r\n   * Toggle full screen of the editor.\r\n   */\r\n  function toggleFullScreen(editor) {\r\n    var el = editor.codemirror.getWrapperElement();\r\n\r\n    // https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\r\n    var doc = document;\r\n    var isFull = doc.fullScreen || doc.mozFullScreen || doc.webkitIsFullScreen;\r\n    var request = function() {\r\n      if (el.requestFullScreen) {\r\n        el.requestFullScreen();\r\n      } else if (el.mozRequestFullScreen) {\r\n        el.mozRequestFullScreen();\r\n      } else if (el.webkitRequestFullScreen) {\r\n        el.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\r\n      }\r\n    };\r\n    var cancel = function() {\r\n      if (doc.cancelFullScreen) {\r\n        doc.cancelFullScreen();\r\n      } else if (doc.mozCancelFullScreen) {\r\n        doc.mozCancelFullScreen();\r\n      } else if (doc.webkitCancelFullScreen) {\r\n        doc.webkitCancelFullScreen();\r\n      }\r\n    };\r\n    if (!isFull) {\r\n      request();\r\n    } else if (cancel) {\r\n      cancel();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Action for toggling bold.\r\n   */\r\n  function toggleBold(editor) {\r\n    _toggleBlock(editor, 'bold', '**');\r\n  }\r\n\r\n\r\n  /**\r\n   * Action for toggling italic.\r\n   */\r\n  function toggleItalic(editor) {\r\n    _toggleBlock(editor, 'italic', '*');\r\n  }\r\n\r\n  /**\r\n   * Action for toggling code block.\r\n   */\r\n  function toggleCodeBlock(editor) {\r\n    _toggleBlock(editor, 'code', '```\\r\\n', '\\r\\n```');\r\n  }\r\n\r\n  /**\r\n   * Action for toggling blockquote.\r\n   */\r\n  function toggleBlockquote(editor) {\r\n    var cm = editor.codemirror;\r\n    _toggleLine(cm, 'quote');\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Action for toggling ul.\r\n   */\r\n  function toggleUnOrderedList(editor) {\r\n    var cm = editor.codemirror;\r\n    _toggleLine(cm, 'unordered-list');\r\n  }\r\n\r\n\r\n  /**\r\n   * Action for toggling ol.\r\n   */\r\n  function toggleOrderedList(editor) {\r\n    var cm = editor.codemirror;\r\n    _toggleLine(cm, 'ordered-list');\r\n  }\r\n\r\n\r\n  /**\r\n   * Action for drawing a link.\r\n   */\r\n  function drawLink(editor) {\r\n    var cm = editor.codemirror;\r\n    var stat = getState(cm);\r\n    _replaceSelection(cm, stat.link, '[', '](http://)');\r\n  }\r\n\r\n\r\n  /**\r\n   * Action for drawing an img.\r\n   */\r\n  function drawImage(editor) {\r\n    var cm = editor.codemirror;\r\n    var stat = getState(cm);\r\n    _replaceSelection(cm, stat.image, '![', '](http://)');\r\n  }\r\n\r\n\r\n  /**\r\n   * Undo action.\r\n   */\r\n  function undo(editor) {\r\n    var cm = editor.codemirror;\r\n    cm.undo();\r\n    cm.focus();\r\n  }\r\n\r\n\r\n  /**\r\n   * Redo action.\r\n   */\r\n  function redo(editor) {\r\n    var cm = editor.codemirror;\r\n    cm.redo();\r\n    cm.focus();\r\n  }\r\n\r\n  /**\r\n   * Preview action.\r\n   */\r\n  function togglePreview(editor) {\r\n    var toolbar = editor.toolbar.preview;\r\n    var parse = editor.constructor.markdown;\r\n    var cm = editor.codemirror;\r\n    var wrapper = cm.getWrapperElement();\r\n    var preview = wrapper.lastChild;\r\n    if (!/editor-preview/.test(preview.className)) {\r\n      preview = document.createElement('div');\r\n      preview.className = 'editor-preview';\r\n      wrapper.appendChild(preview);\r\n    }\r\n    if (/editor-preview-active/.test(preview.className)) {\r\n      preview.className = preview.className.replace(\r\n        /\\s*editor-preview-active\\s*/g, ''\r\n      );\r\n      toolbar.className = toolbar.className.replace(/\\s*active\\s*/g, '');\r\n    } else {\r\n      /* When the preview button is clicked for the first time,\r\n       * give some time for the transition from editor.css to fire and the view to slide from right to left,\r\n       * instead of just appearing.\r\n       */\r\n      setTimeout(function() {preview.className += ' editor-preview-active'}, 1);\r\n      toolbar.className += ' active';\r\n    }\r\n    var text = cm.getValue();\r\n    preview.innerHTML = parse(text);\r\n  }\r\n\r\n  function _replaceSelection(cm, active, start, end) {\r\n    var text;\r\n    var startPoint = cm.getCursor('start');\r\n    var endPoint = cm.getCursor('end');\r\n    if (active) {\r\n      text = cm.getLine(startPoint.line);\r\n      start = text.slice(0, startPoint.ch);\r\n      end = text.slice(startPoint.ch);\r\n      cm.setLine(startPoint.line, start + end);\r\n    } else {\r\n      text = cm.getSelection();\r\n      cm.replaceSelection(start + text + end);\r\n\r\n      startPoint.ch += start.length;\r\n      endPoint.ch += start.length;\r\n    }\r\n    cm.setSelection(startPoint, endPoint);\r\n    cm.focus();\r\n  }\r\n\r\n\r\n  function _toggleLine(cm, name) {\r\n    var stat = getState(cm);\r\n    var startPoint = cm.getCursor('start');\r\n    var endPoint = cm.getCursor('end');\r\n    var repl = {\r\n      quote: /^(\\s*)\\>\\s+/,\r\n      'unordered-list': /^(\\s*)(\\*|\\-|\\+)\\s+/,\r\n      'ordered-list': /^(\\s*)\\d+\\.\\s+/\r\n    };\r\n    var map = {\r\n      quote: '> ',\r\n      'unordered-list': '* ',\r\n      'ordered-list': '1. '\r\n    };\r\n    for (var i = startPoint.line; i <= endPoint.line; i++) {\r\n      (function(i) {\r\n        var text = cm.getLine(i);\r\n        if (stat[name]) {\r\n          text = text.replace(repl[name], '$1');\r\n        } else {\r\n          text = map[name] + text;\r\n        }\r\n        cm.setLine(i, text);\r\n      })(i);\r\n    }\r\n    cm.focus();\r\n  }\r\n\r\n  function _toggleBlock(editor, type, start_chars, end_chars){\r\n    end_chars = (typeof end_chars === 'undefined') ? start_chars : end_chars;\r\n    var cm = editor.codemirror;\r\n    var stat = getState(cm);\r\n\r\n    var text;\r\n    var start = start_chars;\r\n    var end = end_chars;\r\n\r\n    var startPoint = cm.getCursor('start');\r\n    var endPoint = cm.getCursor('end');\r\n    if (stat[type]) {\r\n      text = cm.getLine(startPoint.line);\r\n      start = text.slice(0, startPoint.ch);\r\n      end = text.slice(startPoint.ch);\r\n      startRegex = new RegExp(\"/^(.*)?(\\*|\\_){\" + start_chars.length + \"}(\\S+.*)?$/\", \"g\")\r\n      start = start.replace(startRegex, '$1$3');\r\n      endRegex = new RegExp(\"/^(.*\\S+)?(\\*|\\_){\" + end_chars.length + \"}(\\s+.*)?$/\", \"g\")\r\n      end = end.replace(endRegex, '$1$3');\r\n      startPoint.ch -= start_chars.length;\r\n      endPoint.ch -= end_chars.length;\r\n      cm.setLine(startPoint.line, start + end);\r\n    } else {\r\n      text = cm.getSelection();\r\n      cm.replaceSelection(start + text + end);\r\n\r\n      startPoint.ch += start_chars.length;\r\n      endPoint.ch += end_chars.length;\r\n    }\r\n    cm.setSelection(startPoint, endPoint);\r\n    cm.focus();\r\n  }\r\n\r\n\r\n  /* The right word count in respect for CJK. */\r\n  function wordCount(data) {\r\n    var pattern = /[a-zA-Z0-9_\\u0392-\\u03c9]+|[\\u4E00-\\u9FFF\\u3400-\\u4dbf\\uf900-\\ufaff\\u3040-\\u309f\\uac00-\\ud7af]+/g;\r\n    var m = data.match(pattern);\r\n    var count = 0;\r\n    if( m === null ) return count;\r\n    for (var i = 0; i < m.length; i++) {\r\n      if (m[i].charCodeAt(0) >= 0x4E00) {\r\n        count += m[i].length;\r\n      } else {\r\n        count += 1;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n\r\n  var toolbar = [\r\n    {name: 'bold', action: toggleBold},\r\n    {name: 'italic', action: toggleItalic},\r\n    {name: 'code', action: toggleCodeBlock},\r\n    '|',\r\n\r\n    {name: 'quote', action: toggleBlockquote},\r\n    {name: 'unordered-list', action: toggleUnOrderedList},\r\n    {name: 'ordered-list', action: toggleOrderedList},\r\n    '|',\r\n\r\n    {name: 'link', action: drawLink},\r\n    {name: 'image', action: drawImage},\r\n    '|',\r\n\r\n    {name: 'info', action: 'http://lab.lepture.com/editor/markdown'},\r\n    {name: 'preview', action: togglePreview},\r\n    {name: 'fullscreen', action: toggleFullScreen}\r\n  ];\r\n\r\n\r\n\r\n  var Editor = ui.MarkEditor = Widget.inherit({\r\n    klassName : \"MarkEditor\",\r\n\r\n    _construct : function (options) {\r\n      options = options || {};\r\n\r\n      if (options.element) {\r\n        this.element = options.element;\r\n      }\r\n\r\n      options.toolbar = options.toolbar || Editor.toolbar;\r\n      // you can customize toolbar with object\r\n      // [{name: 'bold', shortcut: 'Ctrl-B', className: 'icon-bold'}]\r\n\r\n      if (!options.hasOwnProperty('status')) {\r\n        options.status = ['lines', 'words', 'cursor'];\r\n      }\r\n\r\n      this.options = options;\r\n\r\n      // If user has passed an element, it should auto rendered\r\n      if (this.element) {\r\n        this.render();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Render editor to the given element.\r\n     */\r\n    render : function(el) {\r\n      if (!el) {\r\n        el = this.element || document.getElementsByTagName('textarea')[0];\r\n      }\r\n\r\n      if (this._rendered && this._rendered === el) {\r\n        // Already rendered.\r\n        return;\r\n      }\r\n\r\n      this.element = el;\r\n      var options = this.options;\r\n\r\n      var self = this;\r\n      var keyMaps = {};\r\n\r\n      for (var key in shortcuts) {\r\n        (function(key) {\r\n          keyMaps[fixShortcut(key)] = function(cm) {\r\n            shortcuts[key](self);\r\n          };\r\n        })(key);\r\n      }\r\n\r\n      keyMaps[\"Enter\"] = \"newlineAndIndentContinueMarkdownList\";\r\n      keyMaps['Tab'] = 'tabAndIndentContinueMarkdownList';\r\n      keyMaps['Shift-Tab'] = 'shiftTabAndIndentContinueMarkdownList';\r\n\r\n      this.codemirror = CodeMirror.fromTextArea(el, {\r\n        mode: 'markdown',\r\n        theme: 'paper',\r\n        tabSize: '2',\r\n        indentWithTabs: true,\r\n        lineNumbers: false,\r\n        autofocus: true,\r\n        extraKeys: keyMaps\r\n      });\r\n\r\n      if (options.toolbar !== false) {\r\n        this.createToolbar();\r\n      }\r\n      if (options.status !== false) {\r\n        this.createStatusbar();\r\n      }\r\n\r\n      this._rendered = this.element;\r\n    },\r\n\r\n    createToolbar : function(items) {\r\n      items = items || this.options.toolbar;\r\n\r\n      if (!items || items.length === 0) {\r\n        return;\r\n      }\r\n\r\n      var bar = document.createElement('div');\r\n      bar.className = 'editor-toolbar';\r\n\r\n      var self = this;\r\n\r\n      var el;\r\n      self.toolbar = {};\r\n\r\n      for (var i = 0; i < items.length; i++) {\r\n        (function(item) {\r\n          var el;\r\n          if (item.name) {\r\n            el = createIcon(item.name, item);\r\n          } else if (item === '|') {\r\n            el = createSep();\r\n          } else {\r\n            el = createIcon(item);\r\n          }\r\n\r\n          // bind events, special for info\r\n          if (item.action) {\r\n            if (typeof item.action === 'function') {\r\n              el.onclick = function(e) {\r\n                item.action(self);\r\n              };\r\n            } else if (typeof item.action === 'string') {\r\n              el.href = item.action;\r\n              el.target = '_blank';\r\n            }\r\n          }\r\n          self.toolbar[item.name || item] = el;\r\n          bar.appendChild(el);\r\n        })(items[i]);\r\n      }\r\n\r\n      var cm = this.codemirror;\r\n      cm.on('cursorActivity', function() {\r\n        var stat = getState(cm);\r\n\r\n        for (var key in self.toolbar) {\r\n          (function(key) {\r\n            var el = self.toolbar[key];\r\n            if (stat[key]) {\r\n              el.className += ' active';\r\n            } else {\r\n              el.className = el.className.replace(/\\s*active\\s*/g, '');\r\n            }\r\n          })(key);\r\n        }\r\n      });\r\n\r\n      var cmWrapper = cm.getWrapperElement();\r\n      cmWrapper.parentNode.insertBefore(bar, cmWrapper);\r\n      return bar;\r\n    },\r\n\r\n    createStatusbar : function(status) {\r\n      status = status || this.options.status;\r\n\r\n      if (!status || status.length === 0) return;\r\n\r\n      var bar = document.createElement('div');\r\n      bar.className = 'editor-statusbar';\r\n\r\n      var pos, cm = this.codemirror;\r\n      for (var i = 0; i < status.length; i++) {\r\n        (function(name) {\r\n          var el = document.createElement('span');\r\n          el.className = name;\r\n          if (name === 'words') {\r\n            el.innerHTML = '0';\r\n            cm.on('update', function() {\r\n              el.innerHTML = wordCount(cm.getValue());\r\n            });\r\n          } else if (name === 'lines') {\r\n            el.innerHTML = '0';\r\n            cm.on('update', function() {\r\n              el.innerHTML = cm.lineCount();\r\n            });\r\n          } else if (name === 'cursor') {\r\n            el.innerHTML = '0:0';\r\n            cm.on('cursorActivity', function() {\r\n              pos = cm.getCursor();\r\n              el.innerHTML = pos.line + ':' + pos.ch;\r\n            });\r\n          }\r\n          bar.appendChild(el);\r\n        })(status[i]);\r\n      }\r\n      var cmWrapper = this.codemirror.getWrapperElement();\r\n      cmWrapper.parentNode.insertBefore(bar, cmWrapper.nextSibling);\r\n      return bar;\r\n    },\r\n\r\n    /**\r\n     * Get or set the text content.\r\n     */\r\n    value : function(val) {\r\n      if (val) {\r\n        this.codemirror.getDoc().setValue(val);\r\n        return this;\r\n      } else {\r\n        return this.codemirror.getValue();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Bind instance methods for exports.\r\n     */\r\n    toggleBold : function() {\r\n      toggleBold(this);\r\n    },\r\n\r\n    toggleItalic : function() {\r\n      toggleItalic(this);\r\n    },\r\n\r\n    toggleBlockquote : function() {\r\n      toggleBlockquote(this);\r\n    },\r\n\r\n    toggleUnOrderedList : function() {\r\n      toggleUnOrderedList(this);\r\n    },\r\n\r\n    toggleOrderedList : function() {\r\n      toggleOrderedList(this);\r\n    },\r\n\r\n    drawLink : function() {\r\n      drawLink(this);\r\n    },\r\n\r\n    drawImage : function() {\r\n      drawImage(this);\r\n    },\r\n\r\n    undo : function() {\r\n      undo(this);\r\n    },\r\n\r\n    redo : function() {\r\n      redo(this);\r\n    },\r\n\r\n    togglePreview : function() {\r\n      togglePreview(this);\r\n    },\r\n    toggleFullScreen : function() {\r\n      toggleFullScreen(this);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Default toolbar elements.\r\n   */\r\n  Editor.toolbar = toolbar;\r\n\r\n  /**\r\n   * Default markdown render.\r\n   */\r\n  Editor.markdown = function(text) {\r\n    // use marked as markdown parser\r\n    return MarkParser.parse(text);\r\n  };\r\n\r\n\r\n\r\n  /**\r\n   * Bind static methods for exports.\r\n   */\r\n  Editor.toggleBold = toggleBold;\r\n  Editor.toggleItalic = toggleItalic;\r\n  Editor.toggleBlockquote = toggleBlockquote;\r\n  Editor.toggleUnOrderedList = toggleUnOrderedList;\r\n  Editor.toggleOrderedList = toggleOrderedList;\r\n  Editor.drawLink = drawLink;\r\n  Editor.drawImage = drawImage;\r\n  Editor.undo = undo;\r\n  Editor.redo = redo;\r\n  Editor.togglePreview = togglePreview;\r\n  Editor.toggleFullScreen = toggleFullScreen;\r\n\r\n  return Editor;\r\n});\r\n\ndefine('skylark-ui-markeditor/main',[\r\n    \"./MarkEditor\"\r\n], function(MarkEditor) {\r\n    return MarkEditor;\r\n});\r\n\ndefine('skylark-ui-markeditor', ['skylark-ui-markeditor/main'], function (main) { return main; });\n\n"]}